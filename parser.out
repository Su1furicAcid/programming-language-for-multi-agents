Created by PLY (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE

Grammar

Rule 0     S' -> program
Rule 1     program -> global_block program_body
Rule 2     program -> program_body
Rule 3     program_body -> program_body_item program_body
Rule 4     program_body -> program_body_item
Rule 5     program_body_item -> statement
Rule 6     program_body_item -> agent_def
Rule 7     program_body_item -> connect_block
Rule 8     program_body_item -> func_def
Rule 9     global_block -> GLOBAL COLON INDENT var_decl_list DEDENT
Rule 10    var_decl_list -> var_decl var_decl_list
Rule 11    var_decl_list -> var_decl
Rule 12    var_decl -> IDENTIFIER COLON type EQUALS expr
Rule 13    var_decl -> IDENTIFIER COLON type
Rule 14    var_decl -> IDENTIFIER EQUALS expr
Rule 15    var_decl -> IDENTIFIER
Rule 16    type -> base_type
Rule 17    type -> list_type
Rule 18    type -> record_type
Rule 19    type -> tuple_type
Rule 20    base_type -> TYPE_STR
Rule 21    base_type -> TYPE_INT
Rule 22    base_type -> TYPE_FLOAT
Rule 23    base_type -> TYPE_BOOL
Rule 24    list_type -> TYPE_LIST LBRACE type RBRACE
Rule 25    record_type -> TYPE_RECORD LBRACE field_decl_list RBRACE
Rule 26    field_decl_list -> field_decl field_decl_list
Rule 27    field_decl_list -> field_decl
Rule 28    field_decl -> IDENTIFIER COLON type
Rule 29    tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple RPAREN
Rule 30    type_list_in_tuple -> type_list_in_tuple COMMA type
Rule 31    type_list_in_tuple -> type
Rule 32    agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT
Rule 33    agent_body -> agent_body_item agent_body
Rule 34    agent_body -> agent_body_item
Rule 35    agent_body_item -> input_block
Rule 36    agent_body_item -> output_block
Rule 37    agent_body_item -> memory_block
Rule 38    agent_body_item -> model_block
Rule 39    agent_body_item -> statement
Rule 40    agent_body_item -> chat_block
Rule 41    input_block -> INPUT COLON INDENT var_decl_list DEDENT
Rule 42    output_block -> OUTPUT COLON INDENT var_decl_list DEDENT
Rule 43    memory_block -> MEMORY COLON INDENT var_decl_list DEDENT
Rule 44    model_block -> MODEL COLON STRING
Rule 45    chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING
Rule 46    connect_block -> CONNECT COLON INDENT connection_list DEDENT
Rule 47    connection_list -> connection connection_list
Rule 48    connection_list -> connection
Rule 49    connection -> IDENTIFIER COLON type agent_ref ARROW agent_ref
Rule 50    agent_ref -> IDENTIFIER agent_ref_tail
Rule 51    agent_ref_tail -> DOT IDENTIFIER agent_ref_tail
Rule 52    agent_ref_tail -> empty
Rule 53    func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT
Rule 54    func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT
Rule 55    param_list -> param_decl param_list_tail
Rule 56    param_list -> empty
Rule 57    param_list_tail -> COMMA param_decl param_list_tail
Rule 58    param_list_tail -> empty
Rule 59    param_decl -> var_decl
Rule 60    stmt_block -> INDENT statement_list DEDENT
Rule 61    statement_list -> statement statement_list
Rule 62    statement_list -> statement
Rule 63    statement -> for_stmt
Rule 64    statement -> if_stmt
Rule 65    statement -> while_stmt
Rule 66    statement -> assign_stmt
Rule 67    statement -> expr_stmt
Rule 68    statement -> break_stmt
Rule 69    statement -> continue_stmt
Rule 70    statement -> return_stmt
Rule 71    assign_stmt -> IDENTIFIER COLON type EQUALS expr
Rule 72    assign_stmt -> IDENTIFIER EQUALS expr
Rule 73    expr_stmt -> expr
Rule 74    return_stmt -> RETURN expr
Rule 75    return_stmt -> RETURN
Rule 76    for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block
Rule 77    break_stmt -> BREAK
Rule 78    continue_stmt -> CONTINUE
Rule 79    if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block
Rule 80    if_stmt -> IF expr COLON stmt_block
Rule 81    while_stmt -> WHILE expr COLON stmt_block
Rule 82    expr -> expr_head bin_op expr_tail
Rule 83    expr -> expr_head
Rule 84    expr_head -> atom
Rule 85    expr_head -> list_expr
Rule 86    expr_head -> record_expr
Rule 87    expr_head -> tuple_expr
Rule 88    expr_head -> field_access
Rule 89    expr_head -> func_call
Rule 90    expr_tail -> expr
Rule 91    atom -> IDENTIFIER
Rule 92    atom -> STRING
Rule 93    atom -> NUMBER
Rule 94    atom -> LPAREN expr RPAREN
Rule 95    list_expr -> LBRACE list_elements RBRACE
Rule 96    list_elements -> expr list_elements_tail
Rule 97    list_elements -> empty
Rule 98    list_elements_tail -> COMMA expr list_elements_tail
Rule 99    list_elements_tail -> empty
Rule 100   record_expr -> LBRACE record_elements RBRACE
Rule 101   record_elements -> field_assign record_elements_tail
Rule 102   record_elements -> empty
Rule 103   record_elements_tail -> COMMA field_assign record_elements_tail
Rule 104   record_elements_tail -> empty
Rule 105   field_assign -> IDENTIFIER EQUALS expr
Rule 106   tuple_expr -> LPAREN tuple_elements RPAREN
Rule 107   tuple_elements -> expr tuple_elements_tail
Rule 108   tuple_elements -> empty
Rule 109   tuple_elements_tail -> COMMA expr tuple_elements_tail
Rule 110   tuple_elements_tail -> empty
Rule 111   field_access -> expr DOT IDENTIFIER
Rule 112   func_call -> IDENTIFIER LPAREN arg_list RPAREN
Rule 113   arg_list -> expr arg_list_tail
Rule 114   arg_list -> empty
Rule 115   arg_list_tail -> COMMA expr arg_list_tail
Rule 116   arg_list_tail -> empty
Rule 117   bin_op -> PLUS
Rule 118   bin_op -> MINUS
Rule 119   bin_op -> TIMES
Rule 120   bin_op -> DIVIDE
Rule 121   bin_op -> MOD
Rule 122   bin_op -> EQ
Rule 123   bin_op -> NEQ
Rule 124   bin_op -> LT
Rule 125   bin_op -> GT
Rule 126   bin_op -> LE
Rule 127   bin_op -> GE
Rule 128   empty -> <empty>

Terminals, with rules where they appear

AGENT                : 32
ARROW                : 49
BREAK                : 77
CHAT                 : 45
COLON                : 9 12 13 28 32 41 42 43 44 45 46 49 53 53 54 71 76 79 79 80 81
COMMA                : 30 57 98 103 109 115
CONNECT              : 46
CONTINUE             : 78
DEDENT               : 9 32 41 42 43 46 53 54 60
DEF                  : 53 54
DIVIDE               : 120
DOT                  : 51 111
ELSE                 : 79
EQ                   : 122
EQUALS               : 12 14 71 72 105
FOR                  : 76
GE                   : 127
GLOBAL               : 9
GT                   : 125
IDENTIFIER           : 12 13 14 15 28 32 45 49 50 51 53 54 71 72 76 91 105 111 112
IF                   : 79 80
IN                   : 76
INDENT               : 9 32 41 42 43 46 53 54 60
INPUT                : 41
LBRACE               : 24 25 95 100
LE                   : 126
LPAREN               : 29 53 54 94 106 112
LT                   : 124
MEMORY               : 43
MINUS                : 118
MOD                  : 121
MODEL                : 44
NEQ                  : 123
NEWLINE              : 
NUMBER               : 93
OUTPUT               : 42
PLUS                 : 117
RBRACE               : 24 25 95 100
RETURN               : 74 75
RPAREN               : 29 53 54 94 106 112
STRING               : 44 92
TIMES                : 119
TRIPLE_STRING        : 45
TYPE_BOOL            : 23
TYPE_FLOAT           : 22
TYPE_INT             : 21
TYPE_LIST            : 24
TYPE_RECORD          : 25
TYPE_STR             : 20
TYPE_TUPLE           : 29
WHILE                : 81
error                : 

Nonterminals, with rules where they appear

agent_body           : 32 33
agent_body_item      : 33 34
agent_def            : 6
agent_ref            : 49 49
agent_ref_tail       : 50 51
arg_list             : 112
arg_list_tail        : 113 115
assign_stmt          : 66
atom                 : 84
base_type            : 16
bin_op               : 82
break_stmt           : 68
chat_block           : 40
connect_block        : 7
connection           : 47 48
connection_list      : 46 47
continue_stmt        : 69
empty                : 52 56 58 97 99 102 104 108 110 114 116
expr                 : 12 14 71 72 73 74 76 79 80 81 90 94 96 98 105 107 109 111 113 115
expr_head            : 82 83
expr_stmt            : 67
expr_tail            : 82
field_access         : 88
field_assign         : 101 103
field_decl           : 26 27
field_decl_list      : 25 26
for_stmt             : 63
func_call            : 89
func_def             : 8
global_block         : 1
if_stmt              : 64
input_block          : 35
list_elements        : 95
list_elements_tail   : 96 98
list_expr            : 85
list_type            : 17
memory_block         : 37
model_block          : 38
output_block         : 36
param_decl           : 55 57
param_list           : 53 54
param_list_tail      : 55 57
program              : 0
program_body         : 1 2 3
program_body_item    : 3 4
record_elements      : 100
record_elements_tail : 101 103
record_expr          : 86
record_type          : 18
return_stmt          : 70
statement            : 5 39 61 62
statement_list       : 60 61
stmt_block           : 53 54 76 79 79 80 81
tuple_elements       : 106
tuple_elements_tail  : 107 109
tuple_expr           : 87
tuple_type           : 19
type                 : 12 13 24 28 30 31 49 53 71
type_list_in_tuple   : 29 30
var_decl             : 10 11 59
var_decl_list        : 9 10 41 42 43
while_stmt           : 65


state 0

    (0) S' -> . program
    (1) program -> . global_block program_body
    (2) program -> . program_body
    (9) global_block -> . GLOBAL COLON INDENT var_decl_list DEDENT
    (3) program_body -> . program_body_item program_body
    (4) program_body -> . program_body_item
    (5) program_body_item -> . statement
    (6) program_body_item -> . agent_def
    (7) program_body_item -> . connect_block
    (8) program_body_item -> . func_def
    (63) statement -> . for_stmt
    (64) statement -> . if_stmt
    (65) statement -> . while_stmt
    (66) statement -> . assign_stmt
    (67) statement -> . expr_stmt
    (68) statement -> . break_stmt
    (69) statement -> . continue_stmt
    (70) statement -> . return_stmt
    (32) agent_def -> . AGENT IDENTIFIER COLON INDENT agent_body DEDENT
    (46) connect_block -> . CONNECT COLON INDENT connection_list DEDENT
    (53) func_def -> . DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT
    (54) func_def -> . DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT
    (76) for_stmt -> . FOR IDENTIFIER IN expr COLON stmt_block
    (79) if_stmt -> . IF expr COLON stmt_block ELSE COLON stmt_block
    (80) if_stmt -> . IF expr COLON stmt_block
    (81) while_stmt -> . WHILE expr COLON stmt_block
    (71) assign_stmt -> . IDENTIFIER COLON type EQUALS expr
    (72) assign_stmt -> . IDENTIFIER EQUALS expr
    (73) expr_stmt -> . expr
    (77) break_stmt -> . BREAK
    (78) continue_stmt -> . CONTINUE
    (74) return_stmt -> . RETURN expr
    (75) return_stmt -> . RETURN
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    GLOBAL          shift and go to state 4
    AGENT           shift and go to state 18
    CONNECT         shift and go to state 20
    DEF             shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    IDENTIFIER      shift and go to state 19
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    program                        shift and go to state 1
    global_block                   shift and go to state 2
    program_body                   shift and go to state 3
    program_body_item              shift and go to state 5
    statement                      shift and go to state 6
    agent_def                      shift and go to state 7
    connect_block                  shift and go to state 8
    func_def                       shift and go to state 9
    for_stmt                       shift and go to state 10
    if_stmt                        shift and go to state 11
    while_stmt                     shift and go to state 12
    assign_stmt                    shift and go to state 13
    expr_stmt                      shift and go to state 14
    break_stmt                     shift and go to state 15
    continue_stmt                  shift and go to state 16
    return_stmt                    shift and go to state 17
    expr                           shift and go to state 24
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 1

    (0) S' -> program .



state 2

    (1) program -> global_block . program_body
    (3) program_body -> . program_body_item program_body
    (4) program_body -> . program_body_item
    (5) program_body_item -> . statement
    (6) program_body_item -> . agent_def
    (7) program_body_item -> . connect_block
    (8) program_body_item -> . func_def
    (63) statement -> . for_stmt
    (64) statement -> . if_stmt
    (65) statement -> . while_stmt
    (66) statement -> . assign_stmt
    (67) statement -> . expr_stmt
    (68) statement -> . break_stmt
    (69) statement -> . continue_stmt
    (70) statement -> . return_stmt
    (32) agent_def -> . AGENT IDENTIFIER COLON INDENT agent_body DEDENT
    (46) connect_block -> . CONNECT COLON INDENT connection_list DEDENT
    (53) func_def -> . DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT
    (54) func_def -> . DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT
    (76) for_stmt -> . FOR IDENTIFIER IN expr COLON stmt_block
    (79) if_stmt -> . IF expr COLON stmt_block ELSE COLON stmt_block
    (80) if_stmt -> . IF expr COLON stmt_block
    (81) while_stmt -> . WHILE expr COLON stmt_block
    (71) assign_stmt -> . IDENTIFIER COLON type EQUALS expr
    (72) assign_stmt -> . IDENTIFIER EQUALS expr
    (73) expr_stmt -> . expr
    (77) break_stmt -> . BREAK
    (78) continue_stmt -> . CONTINUE
    (74) return_stmt -> . RETURN expr
    (75) return_stmt -> . RETURN
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    AGENT           shift and go to state 18
    CONNECT         shift and go to state 20
    DEF             shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    IDENTIFIER      shift and go to state 19
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    program_body                   shift and go to state 40
    program_body_item              shift and go to state 5
    statement                      shift and go to state 6
    agent_def                      shift and go to state 7
    connect_block                  shift and go to state 8
    func_def                       shift and go to state 9
    for_stmt                       shift and go to state 10
    if_stmt                        shift and go to state 11
    while_stmt                     shift and go to state 12
    assign_stmt                    shift and go to state 13
    expr_stmt                      shift and go to state 14
    break_stmt                     shift and go to state 15
    continue_stmt                  shift and go to state 16
    return_stmt                    shift and go to state 17
    expr                           shift and go to state 24
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 3

    (2) program -> program_body .

    $end            reduce using rule 2 (program -> program_body .)


state 4

    (9) global_block -> GLOBAL . COLON INDENT var_decl_list DEDENT

    COLON           shift and go to state 41


state 5

    (3) program_body -> program_body_item . program_body
    (4) program_body -> program_body_item .
    (3) program_body -> . program_body_item program_body
    (4) program_body -> . program_body_item
    (5) program_body_item -> . statement
    (6) program_body_item -> . agent_def
    (7) program_body_item -> . connect_block
    (8) program_body_item -> . func_def
    (63) statement -> . for_stmt
    (64) statement -> . if_stmt
    (65) statement -> . while_stmt
    (66) statement -> . assign_stmt
    (67) statement -> . expr_stmt
    (68) statement -> . break_stmt
    (69) statement -> . continue_stmt
    (70) statement -> . return_stmt
    (32) agent_def -> . AGENT IDENTIFIER COLON INDENT agent_body DEDENT
    (46) connect_block -> . CONNECT COLON INDENT connection_list DEDENT
    (53) func_def -> . DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT
    (54) func_def -> . DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT
    (76) for_stmt -> . FOR IDENTIFIER IN expr COLON stmt_block
    (79) if_stmt -> . IF expr COLON stmt_block ELSE COLON stmt_block
    (80) if_stmt -> . IF expr COLON stmt_block
    (81) while_stmt -> . WHILE expr COLON stmt_block
    (71) assign_stmt -> . IDENTIFIER COLON type EQUALS expr
    (72) assign_stmt -> . IDENTIFIER EQUALS expr
    (73) expr_stmt -> . expr
    (77) break_stmt -> . BREAK
    (78) continue_stmt -> . CONTINUE
    (74) return_stmt -> . RETURN expr
    (75) return_stmt -> . RETURN
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    $end            reduce using rule 4 (program_body -> program_body_item .)
    AGENT           shift and go to state 18
    CONNECT         shift and go to state 20
    DEF             shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    IDENTIFIER      shift and go to state 19
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    program_body_item              shift and go to state 5
    program_body                   shift and go to state 42
    statement                      shift and go to state 6
    agent_def                      shift and go to state 7
    connect_block                  shift and go to state 8
    func_def                       shift and go to state 9
    for_stmt                       shift and go to state 10
    if_stmt                        shift and go to state 11
    while_stmt                     shift and go to state 12
    assign_stmt                    shift and go to state 13
    expr_stmt                      shift and go to state 14
    break_stmt                     shift and go to state 15
    continue_stmt                  shift and go to state 16
    return_stmt                    shift and go to state 17
    expr                           shift and go to state 24
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 6

    (5) program_body_item -> statement .

    AGENT           reduce using rule 5 (program_body_item -> statement .)
    CONNECT         reduce using rule 5 (program_body_item -> statement .)
    DEF             reduce using rule 5 (program_body_item -> statement .)
    FOR             reduce using rule 5 (program_body_item -> statement .)
    IF              reduce using rule 5 (program_body_item -> statement .)
    WHILE           reduce using rule 5 (program_body_item -> statement .)
    IDENTIFIER      reduce using rule 5 (program_body_item -> statement .)
    BREAK           reduce using rule 5 (program_body_item -> statement .)
    CONTINUE        reduce using rule 5 (program_body_item -> statement .)
    RETURN          reduce using rule 5 (program_body_item -> statement .)
    STRING          reduce using rule 5 (program_body_item -> statement .)
    NUMBER          reduce using rule 5 (program_body_item -> statement .)
    LPAREN          reduce using rule 5 (program_body_item -> statement .)
    LBRACE          reduce using rule 5 (program_body_item -> statement .)
    $end            reduce using rule 5 (program_body_item -> statement .)


state 7

    (6) program_body_item -> agent_def .

    AGENT           reduce using rule 6 (program_body_item -> agent_def .)
    CONNECT         reduce using rule 6 (program_body_item -> agent_def .)
    DEF             reduce using rule 6 (program_body_item -> agent_def .)
    FOR             reduce using rule 6 (program_body_item -> agent_def .)
    IF              reduce using rule 6 (program_body_item -> agent_def .)
    WHILE           reduce using rule 6 (program_body_item -> agent_def .)
    IDENTIFIER      reduce using rule 6 (program_body_item -> agent_def .)
    BREAK           reduce using rule 6 (program_body_item -> agent_def .)
    CONTINUE        reduce using rule 6 (program_body_item -> agent_def .)
    RETURN          reduce using rule 6 (program_body_item -> agent_def .)
    STRING          reduce using rule 6 (program_body_item -> agent_def .)
    NUMBER          reduce using rule 6 (program_body_item -> agent_def .)
    LPAREN          reduce using rule 6 (program_body_item -> agent_def .)
    LBRACE          reduce using rule 6 (program_body_item -> agent_def .)
    $end            reduce using rule 6 (program_body_item -> agent_def .)


state 8

    (7) program_body_item -> connect_block .

    AGENT           reduce using rule 7 (program_body_item -> connect_block .)
    CONNECT         reduce using rule 7 (program_body_item -> connect_block .)
    DEF             reduce using rule 7 (program_body_item -> connect_block .)
    FOR             reduce using rule 7 (program_body_item -> connect_block .)
    IF              reduce using rule 7 (program_body_item -> connect_block .)
    WHILE           reduce using rule 7 (program_body_item -> connect_block .)
    IDENTIFIER      reduce using rule 7 (program_body_item -> connect_block .)
    BREAK           reduce using rule 7 (program_body_item -> connect_block .)
    CONTINUE        reduce using rule 7 (program_body_item -> connect_block .)
    RETURN          reduce using rule 7 (program_body_item -> connect_block .)
    STRING          reduce using rule 7 (program_body_item -> connect_block .)
    NUMBER          reduce using rule 7 (program_body_item -> connect_block .)
    LPAREN          reduce using rule 7 (program_body_item -> connect_block .)
    LBRACE          reduce using rule 7 (program_body_item -> connect_block .)
    $end            reduce using rule 7 (program_body_item -> connect_block .)


state 9

    (8) program_body_item -> func_def .

    AGENT           reduce using rule 8 (program_body_item -> func_def .)
    CONNECT         reduce using rule 8 (program_body_item -> func_def .)
    DEF             reduce using rule 8 (program_body_item -> func_def .)
    FOR             reduce using rule 8 (program_body_item -> func_def .)
    IF              reduce using rule 8 (program_body_item -> func_def .)
    WHILE           reduce using rule 8 (program_body_item -> func_def .)
    IDENTIFIER      reduce using rule 8 (program_body_item -> func_def .)
    BREAK           reduce using rule 8 (program_body_item -> func_def .)
    CONTINUE        reduce using rule 8 (program_body_item -> func_def .)
    RETURN          reduce using rule 8 (program_body_item -> func_def .)
    STRING          reduce using rule 8 (program_body_item -> func_def .)
    NUMBER          reduce using rule 8 (program_body_item -> func_def .)
    LPAREN          reduce using rule 8 (program_body_item -> func_def .)
    LBRACE          reduce using rule 8 (program_body_item -> func_def .)
    $end            reduce using rule 8 (program_body_item -> func_def .)


state 10

    (63) statement -> for_stmt .

    AGENT           reduce using rule 63 (statement -> for_stmt .)
    CONNECT         reduce using rule 63 (statement -> for_stmt .)
    DEF             reduce using rule 63 (statement -> for_stmt .)
    FOR             reduce using rule 63 (statement -> for_stmt .)
    IF              reduce using rule 63 (statement -> for_stmt .)
    WHILE           reduce using rule 63 (statement -> for_stmt .)
    IDENTIFIER      reduce using rule 63 (statement -> for_stmt .)
    BREAK           reduce using rule 63 (statement -> for_stmt .)
    CONTINUE        reduce using rule 63 (statement -> for_stmt .)
    RETURN          reduce using rule 63 (statement -> for_stmt .)
    STRING          reduce using rule 63 (statement -> for_stmt .)
    NUMBER          reduce using rule 63 (statement -> for_stmt .)
    LPAREN          reduce using rule 63 (statement -> for_stmt .)
    LBRACE          reduce using rule 63 (statement -> for_stmt .)
    $end            reduce using rule 63 (statement -> for_stmt .)
    INPUT           reduce using rule 63 (statement -> for_stmt .)
    OUTPUT          reduce using rule 63 (statement -> for_stmt .)
    MEMORY          reduce using rule 63 (statement -> for_stmt .)
    MODEL           reduce using rule 63 (statement -> for_stmt .)
    CHAT            reduce using rule 63 (statement -> for_stmt .)
    DEDENT          reduce using rule 63 (statement -> for_stmt .)


state 11

    (64) statement -> if_stmt .

    AGENT           reduce using rule 64 (statement -> if_stmt .)
    CONNECT         reduce using rule 64 (statement -> if_stmt .)
    DEF             reduce using rule 64 (statement -> if_stmt .)
    FOR             reduce using rule 64 (statement -> if_stmt .)
    IF              reduce using rule 64 (statement -> if_stmt .)
    WHILE           reduce using rule 64 (statement -> if_stmt .)
    IDENTIFIER      reduce using rule 64 (statement -> if_stmt .)
    BREAK           reduce using rule 64 (statement -> if_stmt .)
    CONTINUE        reduce using rule 64 (statement -> if_stmt .)
    RETURN          reduce using rule 64 (statement -> if_stmt .)
    STRING          reduce using rule 64 (statement -> if_stmt .)
    NUMBER          reduce using rule 64 (statement -> if_stmt .)
    LPAREN          reduce using rule 64 (statement -> if_stmt .)
    LBRACE          reduce using rule 64 (statement -> if_stmt .)
    $end            reduce using rule 64 (statement -> if_stmt .)
    INPUT           reduce using rule 64 (statement -> if_stmt .)
    OUTPUT          reduce using rule 64 (statement -> if_stmt .)
    MEMORY          reduce using rule 64 (statement -> if_stmt .)
    MODEL           reduce using rule 64 (statement -> if_stmt .)
    CHAT            reduce using rule 64 (statement -> if_stmt .)
    DEDENT          reduce using rule 64 (statement -> if_stmt .)


state 12

    (65) statement -> while_stmt .

    AGENT           reduce using rule 65 (statement -> while_stmt .)
    CONNECT         reduce using rule 65 (statement -> while_stmt .)
    DEF             reduce using rule 65 (statement -> while_stmt .)
    FOR             reduce using rule 65 (statement -> while_stmt .)
    IF              reduce using rule 65 (statement -> while_stmt .)
    WHILE           reduce using rule 65 (statement -> while_stmt .)
    IDENTIFIER      reduce using rule 65 (statement -> while_stmt .)
    BREAK           reduce using rule 65 (statement -> while_stmt .)
    CONTINUE        reduce using rule 65 (statement -> while_stmt .)
    RETURN          reduce using rule 65 (statement -> while_stmt .)
    STRING          reduce using rule 65 (statement -> while_stmt .)
    NUMBER          reduce using rule 65 (statement -> while_stmt .)
    LPAREN          reduce using rule 65 (statement -> while_stmt .)
    LBRACE          reduce using rule 65 (statement -> while_stmt .)
    $end            reduce using rule 65 (statement -> while_stmt .)
    INPUT           reduce using rule 65 (statement -> while_stmt .)
    OUTPUT          reduce using rule 65 (statement -> while_stmt .)
    MEMORY          reduce using rule 65 (statement -> while_stmt .)
    MODEL           reduce using rule 65 (statement -> while_stmt .)
    CHAT            reduce using rule 65 (statement -> while_stmt .)
    DEDENT          reduce using rule 65 (statement -> while_stmt .)


state 13

    (66) statement -> assign_stmt .

    AGENT           reduce using rule 66 (statement -> assign_stmt .)
    CONNECT         reduce using rule 66 (statement -> assign_stmt .)
    DEF             reduce using rule 66 (statement -> assign_stmt .)
    FOR             reduce using rule 66 (statement -> assign_stmt .)
    IF              reduce using rule 66 (statement -> assign_stmt .)
    WHILE           reduce using rule 66 (statement -> assign_stmt .)
    IDENTIFIER      reduce using rule 66 (statement -> assign_stmt .)
    BREAK           reduce using rule 66 (statement -> assign_stmt .)
    CONTINUE        reduce using rule 66 (statement -> assign_stmt .)
    RETURN          reduce using rule 66 (statement -> assign_stmt .)
    STRING          reduce using rule 66 (statement -> assign_stmt .)
    NUMBER          reduce using rule 66 (statement -> assign_stmt .)
    LPAREN          reduce using rule 66 (statement -> assign_stmt .)
    LBRACE          reduce using rule 66 (statement -> assign_stmt .)
    $end            reduce using rule 66 (statement -> assign_stmt .)
    INPUT           reduce using rule 66 (statement -> assign_stmt .)
    OUTPUT          reduce using rule 66 (statement -> assign_stmt .)
    MEMORY          reduce using rule 66 (statement -> assign_stmt .)
    MODEL           reduce using rule 66 (statement -> assign_stmt .)
    CHAT            reduce using rule 66 (statement -> assign_stmt .)
    DEDENT          reduce using rule 66 (statement -> assign_stmt .)


state 14

    (67) statement -> expr_stmt .

    AGENT           reduce using rule 67 (statement -> expr_stmt .)
    CONNECT         reduce using rule 67 (statement -> expr_stmt .)
    DEF             reduce using rule 67 (statement -> expr_stmt .)
    FOR             reduce using rule 67 (statement -> expr_stmt .)
    IF              reduce using rule 67 (statement -> expr_stmt .)
    WHILE           reduce using rule 67 (statement -> expr_stmt .)
    IDENTIFIER      reduce using rule 67 (statement -> expr_stmt .)
    BREAK           reduce using rule 67 (statement -> expr_stmt .)
    CONTINUE        reduce using rule 67 (statement -> expr_stmt .)
    RETURN          reduce using rule 67 (statement -> expr_stmt .)
    STRING          reduce using rule 67 (statement -> expr_stmt .)
    NUMBER          reduce using rule 67 (statement -> expr_stmt .)
    LPAREN          reduce using rule 67 (statement -> expr_stmt .)
    LBRACE          reduce using rule 67 (statement -> expr_stmt .)
    $end            reduce using rule 67 (statement -> expr_stmt .)
    INPUT           reduce using rule 67 (statement -> expr_stmt .)
    OUTPUT          reduce using rule 67 (statement -> expr_stmt .)
    MEMORY          reduce using rule 67 (statement -> expr_stmt .)
    MODEL           reduce using rule 67 (statement -> expr_stmt .)
    CHAT            reduce using rule 67 (statement -> expr_stmt .)
    DEDENT          reduce using rule 67 (statement -> expr_stmt .)


state 15

    (68) statement -> break_stmt .

    AGENT           reduce using rule 68 (statement -> break_stmt .)
    CONNECT         reduce using rule 68 (statement -> break_stmt .)
    DEF             reduce using rule 68 (statement -> break_stmt .)
    FOR             reduce using rule 68 (statement -> break_stmt .)
    IF              reduce using rule 68 (statement -> break_stmt .)
    WHILE           reduce using rule 68 (statement -> break_stmt .)
    IDENTIFIER      reduce using rule 68 (statement -> break_stmt .)
    BREAK           reduce using rule 68 (statement -> break_stmt .)
    CONTINUE        reduce using rule 68 (statement -> break_stmt .)
    RETURN          reduce using rule 68 (statement -> break_stmt .)
    STRING          reduce using rule 68 (statement -> break_stmt .)
    NUMBER          reduce using rule 68 (statement -> break_stmt .)
    LPAREN          reduce using rule 68 (statement -> break_stmt .)
    LBRACE          reduce using rule 68 (statement -> break_stmt .)
    $end            reduce using rule 68 (statement -> break_stmt .)
    INPUT           reduce using rule 68 (statement -> break_stmt .)
    OUTPUT          reduce using rule 68 (statement -> break_stmt .)
    MEMORY          reduce using rule 68 (statement -> break_stmt .)
    MODEL           reduce using rule 68 (statement -> break_stmt .)
    CHAT            reduce using rule 68 (statement -> break_stmt .)
    DEDENT          reduce using rule 68 (statement -> break_stmt .)


state 16

    (69) statement -> continue_stmt .

    AGENT           reduce using rule 69 (statement -> continue_stmt .)
    CONNECT         reduce using rule 69 (statement -> continue_stmt .)
    DEF             reduce using rule 69 (statement -> continue_stmt .)
    FOR             reduce using rule 69 (statement -> continue_stmt .)
    IF              reduce using rule 69 (statement -> continue_stmt .)
    WHILE           reduce using rule 69 (statement -> continue_stmt .)
    IDENTIFIER      reduce using rule 69 (statement -> continue_stmt .)
    BREAK           reduce using rule 69 (statement -> continue_stmt .)
    CONTINUE        reduce using rule 69 (statement -> continue_stmt .)
    RETURN          reduce using rule 69 (statement -> continue_stmt .)
    STRING          reduce using rule 69 (statement -> continue_stmt .)
    NUMBER          reduce using rule 69 (statement -> continue_stmt .)
    LPAREN          reduce using rule 69 (statement -> continue_stmt .)
    LBRACE          reduce using rule 69 (statement -> continue_stmt .)
    $end            reduce using rule 69 (statement -> continue_stmt .)
    INPUT           reduce using rule 69 (statement -> continue_stmt .)
    OUTPUT          reduce using rule 69 (statement -> continue_stmt .)
    MEMORY          reduce using rule 69 (statement -> continue_stmt .)
    MODEL           reduce using rule 69 (statement -> continue_stmt .)
    CHAT            reduce using rule 69 (statement -> continue_stmt .)
    DEDENT          reduce using rule 69 (statement -> continue_stmt .)


state 17

    (70) statement -> return_stmt .

    AGENT           reduce using rule 70 (statement -> return_stmt .)
    CONNECT         reduce using rule 70 (statement -> return_stmt .)
    DEF             reduce using rule 70 (statement -> return_stmt .)
    FOR             reduce using rule 70 (statement -> return_stmt .)
    IF              reduce using rule 70 (statement -> return_stmt .)
    WHILE           reduce using rule 70 (statement -> return_stmt .)
    IDENTIFIER      reduce using rule 70 (statement -> return_stmt .)
    BREAK           reduce using rule 70 (statement -> return_stmt .)
    CONTINUE        reduce using rule 70 (statement -> return_stmt .)
    RETURN          reduce using rule 70 (statement -> return_stmt .)
    STRING          reduce using rule 70 (statement -> return_stmt .)
    NUMBER          reduce using rule 70 (statement -> return_stmt .)
    LPAREN          reduce using rule 70 (statement -> return_stmt .)
    LBRACE          reduce using rule 70 (statement -> return_stmt .)
    $end            reduce using rule 70 (statement -> return_stmt .)
    INPUT           reduce using rule 70 (statement -> return_stmt .)
    OUTPUT          reduce using rule 70 (statement -> return_stmt .)
    MEMORY          reduce using rule 70 (statement -> return_stmt .)
    MODEL           reduce using rule 70 (statement -> return_stmt .)
    CHAT            reduce using rule 70 (statement -> return_stmt .)
    DEDENT          reduce using rule 70 (statement -> return_stmt .)


state 18

    (32) agent_def -> AGENT . IDENTIFIER COLON INDENT agent_body DEDENT

    IDENTIFIER      shift and go to state 43


state 19

    (71) assign_stmt -> IDENTIFIER . COLON type EQUALS expr
    (72) assign_stmt -> IDENTIFIER . EQUALS expr
    (91) atom -> IDENTIFIER .
    (112) func_call -> IDENTIFIER . LPAREN arg_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    COLON           shift and go to state 44
    EQUALS          shift and go to state 45
    PLUS            reduce using rule 91 (atom -> IDENTIFIER .)
    MINUS           reduce using rule 91 (atom -> IDENTIFIER .)
    TIMES           reduce using rule 91 (atom -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (atom -> IDENTIFIER .)
    MOD             reduce using rule 91 (atom -> IDENTIFIER .)
    EQ              reduce using rule 91 (atom -> IDENTIFIER .)
    NEQ             reduce using rule 91 (atom -> IDENTIFIER .)
    LT              reduce using rule 91 (atom -> IDENTIFIER .)
    GT              reduce using rule 91 (atom -> IDENTIFIER .)
    LE              reduce using rule 91 (atom -> IDENTIFIER .)
    GE              reduce using rule 91 (atom -> IDENTIFIER .)
    DOT             reduce using rule 91 (atom -> IDENTIFIER .)
    AGENT           reduce using rule 91 (atom -> IDENTIFIER .)
    CONNECT         reduce using rule 91 (atom -> IDENTIFIER .)
    DEF             reduce using rule 91 (atom -> IDENTIFIER .)
    FOR             reduce using rule 91 (atom -> IDENTIFIER .)
    IF              reduce using rule 91 (atom -> IDENTIFIER .)
    WHILE           reduce using rule 91 (atom -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 91 (atom -> IDENTIFIER .)
    BREAK           reduce using rule 91 (atom -> IDENTIFIER .)
    CONTINUE        reduce using rule 91 (atom -> IDENTIFIER .)
    RETURN          reduce using rule 91 (atom -> IDENTIFIER .)
    STRING          reduce using rule 91 (atom -> IDENTIFIER .)
    NUMBER          reduce using rule 91 (atom -> IDENTIFIER .)
    LBRACE          reduce using rule 91 (atom -> IDENTIFIER .)
    $end            reduce using rule 91 (atom -> IDENTIFIER .)
    INPUT           reduce using rule 91 (atom -> IDENTIFIER .)
    OUTPUT          reduce using rule 91 (atom -> IDENTIFIER .)
    MEMORY          reduce using rule 91 (atom -> IDENTIFIER .)
    MODEL           reduce using rule 91 (atom -> IDENTIFIER .)
    CHAT            reduce using rule 91 (atom -> IDENTIFIER .)
    DEDENT          reduce using rule 91 (atom -> IDENTIFIER .)
    LPAREN          shift and go to state 46

  ! LPAREN          [ reduce using rule 91 (atom -> IDENTIFIER .) ]


state 20

    (46) connect_block -> CONNECT . COLON INDENT connection_list DEDENT

    COLON           shift and go to state 47


state 21

    (53) func_def -> DEF . IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT
    (54) func_def -> DEF . IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT

    IDENTIFIER      shift and go to state 48


state 22

    (94) atom -> LPAREN . expr RPAREN
    (106) tuple_expr -> LPAREN . tuple_elements RPAREN
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (107) tuple_elements -> . expr tuple_elements_tail
    (108) tuple_elements -> . empty
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (128) empty -> .
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    RPAREN          reduce using rule 128 (empty -> .)
    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 49
    tuple_elements                 shift and go to state 50
    expr_head                      shift and go to state 30
    empty                          shift and go to state 51
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 23

    (76) for_stmt -> FOR . IDENTIFIER IN expr COLON stmt_block

    IDENTIFIER      shift and go to state 53


state 24

    (73) expr_stmt -> expr .
    (111) field_access -> expr . DOT IDENTIFIER

    AGENT           reduce using rule 73 (expr_stmt -> expr .)
    CONNECT         reduce using rule 73 (expr_stmt -> expr .)
    DEF             reduce using rule 73 (expr_stmt -> expr .)
    FOR             reduce using rule 73 (expr_stmt -> expr .)
    IF              reduce using rule 73 (expr_stmt -> expr .)
    WHILE           reduce using rule 73 (expr_stmt -> expr .)
    IDENTIFIER      reduce using rule 73 (expr_stmt -> expr .)
    BREAK           reduce using rule 73 (expr_stmt -> expr .)
    CONTINUE        reduce using rule 73 (expr_stmt -> expr .)
    RETURN          reduce using rule 73 (expr_stmt -> expr .)
    STRING          reduce using rule 73 (expr_stmt -> expr .)
    NUMBER          reduce using rule 73 (expr_stmt -> expr .)
    LPAREN          reduce using rule 73 (expr_stmt -> expr .)
    LBRACE          reduce using rule 73 (expr_stmt -> expr .)
    $end            reduce using rule 73 (expr_stmt -> expr .)
    INPUT           reduce using rule 73 (expr_stmt -> expr .)
    OUTPUT          reduce using rule 73 (expr_stmt -> expr .)
    MEMORY          reduce using rule 73 (expr_stmt -> expr .)
    MODEL           reduce using rule 73 (expr_stmt -> expr .)
    CHAT            reduce using rule 73 (expr_stmt -> expr .)
    DEDENT          reduce using rule 73 (expr_stmt -> expr .)
    DOT             shift and go to state 54


state 25

    (79) if_stmt -> IF . expr COLON stmt_block ELSE COLON stmt_block
    (80) if_stmt -> IF . expr COLON stmt_block
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 55
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 26

    (81) while_stmt -> WHILE . expr COLON stmt_block
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 56
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 27

    (77) break_stmt -> BREAK .

    AGENT           reduce using rule 77 (break_stmt -> BREAK .)
    CONNECT         reduce using rule 77 (break_stmt -> BREAK .)
    DEF             reduce using rule 77 (break_stmt -> BREAK .)
    FOR             reduce using rule 77 (break_stmt -> BREAK .)
    IF              reduce using rule 77 (break_stmt -> BREAK .)
    WHILE           reduce using rule 77 (break_stmt -> BREAK .)
    IDENTIFIER      reduce using rule 77 (break_stmt -> BREAK .)
    BREAK           reduce using rule 77 (break_stmt -> BREAK .)
    CONTINUE        reduce using rule 77 (break_stmt -> BREAK .)
    RETURN          reduce using rule 77 (break_stmt -> BREAK .)
    STRING          reduce using rule 77 (break_stmt -> BREAK .)
    NUMBER          reduce using rule 77 (break_stmt -> BREAK .)
    LPAREN          reduce using rule 77 (break_stmt -> BREAK .)
    LBRACE          reduce using rule 77 (break_stmt -> BREAK .)
    $end            reduce using rule 77 (break_stmt -> BREAK .)
    INPUT           reduce using rule 77 (break_stmt -> BREAK .)
    OUTPUT          reduce using rule 77 (break_stmt -> BREAK .)
    MEMORY          reduce using rule 77 (break_stmt -> BREAK .)
    MODEL           reduce using rule 77 (break_stmt -> BREAK .)
    CHAT            reduce using rule 77 (break_stmt -> BREAK .)
    DEDENT          reduce using rule 77 (break_stmt -> BREAK .)


state 28

    (78) continue_stmt -> CONTINUE .

    AGENT           reduce using rule 78 (continue_stmt -> CONTINUE .)
    CONNECT         reduce using rule 78 (continue_stmt -> CONTINUE .)
    DEF             reduce using rule 78 (continue_stmt -> CONTINUE .)
    FOR             reduce using rule 78 (continue_stmt -> CONTINUE .)
    IF              reduce using rule 78 (continue_stmt -> CONTINUE .)
    WHILE           reduce using rule 78 (continue_stmt -> CONTINUE .)
    IDENTIFIER      reduce using rule 78 (continue_stmt -> CONTINUE .)
    BREAK           reduce using rule 78 (continue_stmt -> CONTINUE .)
    CONTINUE        reduce using rule 78 (continue_stmt -> CONTINUE .)
    RETURN          reduce using rule 78 (continue_stmt -> CONTINUE .)
    STRING          reduce using rule 78 (continue_stmt -> CONTINUE .)
    NUMBER          reduce using rule 78 (continue_stmt -> CONTINUE .)
    LPAREN          reduce using rule 78 (continue_stmt -> CONTINUE .)
    LBRACE          reduce using rule 78 (continue_stmt -> CONTINUE .)
    $end            reduce using rule 78 (continue_stmt -> CONTINUE .)
    INPUT           reduce using rule 78 (continue_stmt -> CONTINUE .)
    OUTPUT          reduce using rule 78 (continue_stmt -> CONTINUE .)
    MEMORY          reduce using rule 78 (continue_stmt -> CONTINUE .)
    MODEL           reduce using rule 78 (continue_stmt -> CONTINUE .)
    CHAT            reduce using rule 78 (continue_stmt -> CONTINUE .)
    DEDENT          reduce using rule 78 (continue_stmt -> CONTINUE .)


state 29

    (74) return_stmt -> RETURN . expr
    (75) return_stmt -> RETURN .
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    AGENT           reduce using rule 75 (return_stmt -> RETURN .)
    CONNECT         reduce using rule 75 (return_stmt -> RETURN .)
    DEF             reduce using rule 75 (return_stmt -> RETURN .)
    FOR             reduce using rule 75 (return_stmt -> RETURN .)
    IF              reduce using rule 75 (return_stmt -> RETURN .)
    WHILE           reduce using rule 75 (return_stmt -> RETURN .)
    BREAK           reduce using rule 75 (return_stmt -> RETURN .)
    CONTINUE        reduce using rule 75 (return_stmt -> RETURN .)
    RETURN          reduce using rule 75 (return_stmt -> RETURN .)
    $end            reduce using rule 75 (return_stmt -> RETURN .)
    INPUT           reduce using rule 75 (return_stmt -> RETURN .)
    OUTPUT          reduce using rule 75 (return_stmt -> RETURN .)
    MEMORY          reduce using rule 75 (return_stmt -> RETURN .)
    MODEL           reduce using rule 75 (return_stmt -> RETURN .)
    CHAT            reduce using rule 75 (return_stmt -> RETURN .)
    DEDENT          reduce using rule 75 (return_stmt -> RETURN .)
    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

  ! IDENTIFIER      [ reduce using rule 75 (return_stmt -> RETURN .) ]
  ! STRING          [ reduce using rule 75 (return_stmt -> RETURN .) ]
  ! NUMBER          [ reduce using rule 75 (return_stmt -> RETURN .) ]
  ! LPAREN          [ reduce using rule 75 (return_stmt -> RETURN .) ]
  ! LBRACE          [ reduce using rule 75 (return_stmt -> RETURN .) ]

    expr                           shift and go to state 57
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 30

    (82) expr -> expr_head . bin_op expr_tail
    (83) expr -> expr_head .
    (117) bin_op -> . PLUS
    (118) bin_op -> . MINUS
    (119) bin_op -> . TIMES
    (120) bin_op -> . DIVIDE
    (121) bin_op -> . MOD
    (122) bin_op -> . EQ
    (123) bin_op -> . NEQ
    (124) bin_op -> . LT
    (125) bin_op -> . GT
    (126) bin_op -> . LE
    (127) bin_op -> . GE

    DOT             reduce using rule 83 (expr -> expr_head .)
    AGENT           reduce using rule 83 (expr -> expr_head .)
    CONNECT         reduce using rule 83 (expr -> expr_head .)
    DEF             reduce using rule 83 (expr -> expr_head .)
    FOR             reduce using rule 83 (expr -> expr_head .)
    IF              reduce using rule 83 (expr -> expr_head .)
    WHILE           reduce using rule 83 (expr -> expr_head .)
    IDENTIFIER      reduce using rule 83 (expr -> expr_head .)
    BREAK           reduce using rule 83 (expr -> expr_head .)
    CONTINUE        reduce using rule 83 (expr -> expr_head .)
    RETURN          reduce using rule 83 (expr -> expr_head .)
    STRING          reduce using rule 83 (expr -> expr_head .)
    NUMBER          reduce using rule 83 (expr -> expr_head .)
    LPAREN          reduce using rule 83 (expr -> expr_head .)
    LBRACE          reduce using rule 83 (expr -> expr_head .)
    $end            reduce using rule 83 (expr -> expr_head .)
    RPAREN          reduce using rule 83 (expr -> expr_head .)
    COMMA           reduce using rule 83 (expr -> expr_head .)
    COLON           reduce using rule 83 (expr -> expr_head .)
    INPUT           reduce using rule 83 (expr -> expr_head .)
    OUTPUT          reduce using rule 83 (expr -> expr_head .)
    MEMORY          reduce using rule 83 (expr -> expr_head .)
    MODEL           reduce using rule 83 (expr -> expr_head .)
    CHAT            reduce using rule 83 (expr -> expr_head .)
    DEDENT          reduce using rule 83 (expr -> expr_head .)
    RBRACE          reduce using rule 83 (expr -> expr_head .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 62
    MOD             shift and go to state 63
    EQ              shift and go to state 64
    NEQ             shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    LE              shift and go to state 68
    GE              shift and go to state 69

    bin_op                         shift and go to state 58

state 31

    (84) expr_head -> atom .

    PLUS            reduce using rule 84 (expr_head -> atom .)
    MINUS           reduce using rule 84 (expr_head -> atom .)
    TIMES           reduce using rule 84 (expr_head -> atom .)
    DIVIDE          reduce using rule 84 (expr_head -> atom .)
    MOD             reduce using rule 84 (expr_head -> atom .)
    EQ              reduce using rule 84 (expr_head -> atom .)
    NEQ             reduce using rule 84 (expr_head -> atom .)
    LT              reduce using rule 84 (expr_head -> atom .)
    GT              reduce using rule 84 (expr_head -> atom .)
    LE              reduce using rule 84 (expr_head -> atom .)
    GE              reduce using rule 84 (expr_head -> atom .)
    DOT             reduce using rule 84 (expr_head -> atom .)
    AGENT           reduce using rule 84 (expr_head -> atom .)
    CONNECT         reduce using rule 84 (expr_head -> atom .)
    DEF             reduce using rule 84 (expr_head -> atom .)
    FOR             reduce using rule 84 (expr_head -> atom .)
    IF              reduce using rule 84 (expr_head -> atom .)
    WHILE           reduce using rule 84 (expr_head -> atom .)
    IDENTIFIER      reduce using rule 84 (expr_head -> atom .)
    BREAK           reduce using rule 84 (expr_head -> atom .)
    CONTINUE        reduce using rule 84 (expr_head -> atom .)
    RETURN          reduce using rule 84 (expr_head -> atom .)
    STRING          reduce using rule 84 (expr_head -> atom .)
    NUMBER          reduce using rule 84 (expr_head -> atom .)
    LPAREN          reduce using rule 84 (expr_head -> atom .)
    LBRACE          reduce using rule 84 (expr_head -> atom .)
    $end            reduce using rule 84 (expr_head -> atom .)
    RPAREN          reduce using rule 84 (expr_head -> atom .)
    COMMA           reduce using rule 84 (expr_head -> atom .)
    COLON           reduce using rule 84 (expr_head -> atom .)
    INPUT           reduce using rule 84 (expr_head -> atom .)
    OUTPUT          reduce using rule 84 (expr_head -> atom .)
    MEMORY          reduce using rule 84 (expr_head -> atom .)
    MODEL           reduce using rule 84 (expr_head -> atom .)
    CHAT            reduce using rule 84 (expr_head -> atom .)
    DEDENT          reduce using rule 84 (expr_head -> atom .)
    RBRACE          reduce using rule 84 (expr_head -> atom .)


state 32

    (85) expr_head -> list_expr .

    PLUS            reduce using rule 85 (expr_head -> list_expr .)
    MINUS           reduce using rule 85 (expr_head -> list_expr .)
    TIMES           reduce using rule 85 (expr_head -> list_expr .)
    DIVIDE          reduce using rule 85 (expr_head -> list_expr .)
    MOD             reduce using rule 85 (expr_head -> list_expr .)
    EQ              reduce using rule 85 (expr_head -> list_expr .)
    NEQ             reduce using rule 85 (expr_head -> list_expr .)
    LT              reduce using rule 85 (expr_head -> list_expr .)
    GT              reduce using rule 85 (expr_head -> list_expr .)
    LE              reduce using rule 85 (expr_head -> list_expr .)
    GE              reduce using rule 85 (expr_head -> list_expr .)
    DOT             reduce using rule 85 (expr_head -> list_expr .)
    AGENT           reduce using rule 85 (expr_head -> list_expr .)
    CONNECT         reduce using rule 85 (expr_head -> list_expr .)
    DEF             reduce using rule 85 (expr_head -> list_expr .)
    FOR             reduce using rule 85 (expr_head -> list_expr .)
    IF              reduce using rule 85 (expr_head -> list_expr .)
    WHILE           reduce using rule 85 (expr_head -> list_expr .)
    IDENTIFIER      reduce using rule 85 (expr_head -> list_expr .)
    BREAK           reduce using rule 85 (expr_head -> list_expr .)
    CONTINUE        reduce using rule 85 (expr_head -> list_expr .)
    RETURN          reduce using rule 85 (expr_head -> list_expr .)
    STRING          reduce using rule 85 (expr_head -> list_expr .)
    NUMBER          reduce using rule 85 (expr_head -> list_expr .)
    LPAREN          reduce using rule 85 (expr_head -> list_expr .)
    LBRACE          reduce using rule 85 (expr_head -> list_expr .)
    $end            reduce using rule 85 (expr_head -> list_expr .)
    RPAREN          reduce using rule 85 (expr_head -> list_expr .)
    COMMA           reduce using rule 85 (expr_head -> list_expr .)
    COLON           reduce using rule 85 (expr_head -> list_expr .)
    INPUT           reduce using rule 85 (expr_head -> list_expr .)
    OUTPUT          reduce using rule 85 (expr_head -> list_expr .)
    MEMORY          reduce using rule 85 (expr_head -> list_expr .)
    MODEL           reduce using rule 85 (expr_head -> list_expr .)
    CHAT            reduce using rule 85 (expr_head -> list_expr .)
    DEDENT          reduce using rule 85 (expr_head -> list_expr .)
    RBRACE          reduce using rule 85 (expr_head -> list_expr .)


state 33

    (86) expr_head -> record_expr .

    PLUS            reduce using rule 86 (expr_head -> record_expr .)
    MINUS           reduce using rule 86 (expr_head -> record_expr .)
    TIMES           reduce using rule 86 (expr_head -> record_expr .)
    DIVIDE          reduce using rule 86 (expr_head -> record_expr .)
    MOD             reduce using rule 86 (expr_head -> record_expr .)
    EQ              reduce using rule 86 (expr_head -> record_expr .)
    NEQ             reduce using rule 86 (expr_head -> record_expr .)
    LT              reduce using rule 86 (expr_head -> record_expr .)
    GT              reduce using rule 86 (expr_head -> record_expr .)
    LE              reduce using rule 86 (expr_head -> record_expr .)
    GE              reduce using rule 86 (expr_head -> record_expr .)
    DOT             reduce using rule 86 (expr_head -> record_expr .)
    AGENT           reduce using rule 86 (expr_head -> record_expr .)
    CONNECT         reduce using rule 86 (expr_head -> record_expr .)
    DEF             reduce using rule 86 (expr_head -> record_expr .)
    FOR             reduce using rule 86 (expr_head -> record_expr .)
    IF              reduce using rule 86 (expr_head -> record_expr .)
    WHILE           reduce using rule 86 (expr_head -> record_expr .)
    IDENTIFIER      reduce using rule 86 (expr_head -> record_expr .)
    BREAK           reduce using rule 86 (expr_head -> record_expr .)
    CONTINUE        reduce using rule 86 (expr_head -> record_expr .)
    RETURN          reduce using rule 86 (expr_head -> record_expr .)
    STRING          reduce using rule 86 (expr_head -> record_expr .)
    NUMBER          reduce using rule 86 (expr_head -> record_expr .)
    LPAREN          reduce using rule 86 (expr_head -> record_expr .)
    LBRACE          reduce using rule 86 (expr_head -> record_expr .)
    $end            reduce using rule 86 (expr_head -> record_expr .)
    RPAREN          reduce using rule 86 (expr_head -> record_expr .)
    COMMA           reduce using rule 86 (expr_head -> record_expr .)
    COLON           reduce using rule 86 (expr_head -> record_expr .)
    INPUT           reduce using rule 86 (expr_head -> record_expr .)
    OUTPUT          reduce using rule 86 (expr_head -> record_expr .)
    MEMORY          reduce using rule 86 (expr_head -> record_expr .)
    MODEL           reduce using rule 86 (expr_head -> record_expr .)
    CHAT            reduce using rule 86 (expr_head -> record_expr .)
    DEDENT          reduce using rule 86 (expr_head -> record_expr .)
    RBRACE          reduce using rule 86 (expr_head -> record_expr .)


state 34

    (87) expr_head -> tuple_expr .

    PLUS            reduce using rule 87 (expr_head -> tuple_expr .)
    MINUS           reduce using rule 87 (expr_head -> tuple_expr .)
    TIMES           reduce using rule 87 (expr_head -> tuple_expr .)
    DIVIDE          reduce using rule 87 (expr_head -> tuple_expr .)
    MOD             reduce using rule 87 (expr_head -> tuple_expr .)
    EQ              reduce using rule 87 (expr_head -> tuple_expr .)
    NEQ             reduce using rule 87 (expr_head -> tuple_expr .)
    LT              reduce using rule 87 (expr_head -> tuple_expr .)
    GT              reduce using rule 87 (expr_head -> tuple_expr .)
    LE              reduce using rule 87 (expr_head -> tuple_expr .)
    GE              reduce using rule 87 (expr_head -> tuple_expr .)
    DOT             reduce using rule 87 (expr_head -> tuple_expr .)
    AGENT           reduce using rule 87 (expr_head -> tuple_expr .)
    CONNECT         reduce using rule 87 (expr_head -> tuple_expr .)
    DEF             reduce using rule 87 (expr_head -> tuple_expr .)
    FOR             reduce using rule 87 (expr_head -> tuple_expr .)
    IF              reduce using rule 87 (expr_head -> tuple_expr .)
    WHILE           reduce using rule 87 (expr_head -> tuple_expr .)
    IDENTIFIER      reduce using rule 87 (expr_head -> tuple_expr .)
    BREAK           reduce using rule 87 (expr_head -> tuple_expr .)
    CONTINUE        reduce using rule 87 (expr_head -> tuple_expr .)
    RETURN          reduce using rule 87 (expr_head -> tuple_expr .)
    STRING          reduce using rule 87 (expr_head -> tuple_expr .)
    NUMBER          reduce using rule 87 (expr_head -> tuple_expr .)
    LPAREN          reduce using rule 87 (expr_head -> tuple_expr .)
    LBRACE          reduce using rule 87 (expr_head -> tuple_expr .)
    $end            reduce using rule 87 (expr_head -> tuple_expr .)
    RPAREN          reduce using rule 87 (expr_head -> tuple_expr .)
    COMMA           reduce using rule 87 (expr_head -> tuple_expr .)
    COLON           reduce using rule 87 (expr_head -> tuple_expr .)
    INPUT           reduce using rule 87 (expr_head -> tuple_expr .)
    OUTPUT          reduce using rule 87 (expr_head -> tuple_expr .)
    MEMORY          reduce using rule 87 (expr_head -> tuple_expr .)
    MODEL           reduce using rule 87 (expr_head -> tuple_expr .)
    CHAT            reduce using rule 87 (expr_head -> tuple_expr .)
    DEDENT          reduce using rule 87 (expr_head -> tuple_expr .)
    RBRACE          reduce using rule 87 (expr_head -> tuple_expr .)


state 35

    (88) expr_head -> field_access .

    PLUS            reduce using rule 88 (expr_head -> field_access .)
    MINUS           reduce using rule 88 (expr_head -> field_access .)
    TIMES           reduce using rule 88 (expr_head -> field_access .)
    DIVIDE          reduce using rule 88 (expr_head -> field_access .)
    MOD             reduce using rule 88 (expr_head -> field_access .)
    EQ              reduce using rule 88 (expr_head -> field_access .)
    NEQ             reduce using rule 88 (expr_head -> field_access .)
    LT              reduce using rule 88 (expr_head -> field_access .)
    GT              reduce using rule 88 (expr_head -> field_access .)
    LE              reduce using rule 88 (expr_head -> field_access .)
    GE              reduce using rule 88 (expr_head -> field_access .)
    DOT             reduce using rule 88 (expr_head -> field_access .)
    AGENT           reduce using rule 88 (expr_head -> field_access .)
    CONNECT         reduce using rule 88 (expr_head -> field_access .)
    DEF             reduce using rule 88 (expr_head -> field_access .)
    FOR             reduce using rule 88 (expr_head -> field_access .)
    IF              reduce using rule 88 (expr_head -> field_access .)
    WHILE           reduce using rule 88 (expr_head -> field_access .)
    IDENTIFIER      reduce using rule 88 (expr_head -> field_access .)
    BREAK           reduce using rule 88 (expr_head -> field_access .)
    CONTINUE        reduce using rule 88 (expr_head -> field_access .)
    RETURN          reduce using rule 88 (expr_head -> field_access .)
    STRING          reduce using rule 88 (expr_head -> field_access .)
    NUMBER          reduce using rule 88 (expr_head -> field_access .)
    LPAREN          reduce using rule 88 (expr_head -> field_access .)
    LBRACE          reduce using rule 88 (expr_head -> field_access .)
    $end            reduce using rule 88 (expr_head -> field_access .)
    RPAREN          reduce using rule 88 (expr_head -> field_access .)
    COMMA           reduce using rule 88 (expr_head -> field_access .)
    COLON           reduce using rule 88 (expr_head -> field_access .)
    INPUT           reduce using rule 88 (expr_head -> field_access .)
    OUTPUT          reduce using rule 88 (expr_head -> field_access .)
    MEMORY          reduce using rule 88 (expr_head -> field_access .)
    MODEL           reduce using rule 88 (expr_head -> field_access .)
    CHAT            reduce using rule 88 (expr_head -> field_access .)
    DEDENT          reduce using rule 88 (expr_head -> field_access .)
    RBRACE          reduce using rule 88 (expr_head -> field_access .)


state 36

    (89) expr_head -> func_call .

    PLUS            reduce using rule 89 (expr_head -> func_call .)
    MINUS           reduce using rule 89 (expr_head -> func_call .)
    TIMES           reduce using rule 89 (expr_head -> func_call .)
    DIVIDE          reduce using rule 89 (expr_head -> func_call .)
    MOD             reduce using rule 89 (expr_head -> func_call .)
    EQ              reduce using rule 89 (expr_head -> func_call .)
    NEQ             reduce using rule 89 (expr_head -> func_call .)
    LT              reduce using rule 89 (expr_head -> func_call .)
    GT              reduce using rule 89 (expr_head -> func_call .)
    LE              reduce using rule 89 (expr_head -> func_call .)
    GE              reduce using rule 89 (expr_head -> func_call .)
    DOT             reduce using rule 89 (expr_head -> func_call .)
    AGENT           reduce using rule 89 (expr_head -> func_call .)
    CONNECT         reduce using rule 89 (expr_head -> func_call .)
    DEF             reduce using rule 89 (expr_head -> func_call .)
    FOR             reduce using rule 89 (expr_head -> func_call .)
    IF              reduce using rule 89 (expr_head -> func_call .)
    WHILE           reduce using rule 89 (expr_head -> func_call .)
    IDENTIFIER      reduce using rule 89 (expr_head -> func_call .)
    BREAK           reduce using rule 89 (expr_head -> func_call .)
    CONTINUE        reduce using rule 89 (expr_head -> func_call .)
    RETURN          reduce using rule 89 (expr_head -> func_call .)
    STRING          reduce using rule 89 (expr_head -> func_call .)
    NUMBER          reduce using rule 89 (expr_head -> func_call .)
    LPAREN          reduce using rule 89 (expr_head -> func_call .)
    LBRACE          reduce using rule 89 (expr_head -> func_call .)
    $end            reduce using rule 89 (expr_head -> func_call .)
    RPAREN          reduce using rule 89 (expr_head -> func_call .)
    COMMA           reduce using rule 89 (expr_head -> func_call .)
    COLON           reduce using rule 89 (expr_head -> func_call .)
    INPUT           reduce using rule 89 (expr_head -> func_call .)
    OUTPUT          reduce using rule 89 (expr_head -> func_call .)
    MEMORY          reduce using rule 89 (expr_head -> func_call .)
    MODEL           reduce using rule 89 (expr_head -> func_call .)
    CHAT            reduce using rule 89 (expr_head -> func_call .)
    DEDENT          reduce using rule 89 (expr_head -> func_call .)
    RBRACE          reduce using rule 89 (expr_head -> func_call .)


state 37

    (92) atom -> STRING .

    PLUS            reduce using rule 92 (atom -> STRING .)
    MINUS           reduce using rule 92 (atom -> STRING .)
    TIMES           reduce using rule 92 (atom -> STRING .)
    DIVIDE          reduce using rule 92 (atom -> STRING .)
    MOD             reduce using rule 92 (atom -> STRING .)
    EQ              reduce using rule 92 (atom -> STRING .)
    NEQ             reduce using rule 92 (atom -> STRING .)
    LT              reduce using rule 92 (atom -> STRING .)
    GT              reduce using rule 92 (atom -> STRING .)
    LE              reduce using rule 92 (atom -> STRING .)
    GE              reduce using rule 92 (atom -> STRING .)
    DOT             reduce using rule 92 (atom -> STRING .)
    AGENT           reduce using rule 92 (atom -> STRING .)
    CONNECT         reduce using rule 92 (atom -> STRING .)
    DEF             reduce using rule 92 (atom -> STRING .)
    FOR             reduce using rule 92 (atom -> STRING .)
    IF              reduce using rule 92 (atom -> STRING .)
    WHILE           reduce using rule 92 (atom -> STRING .)
    IDENTIFIER      reduce using rule 92 (atom -> STRING .)
    BREAK           reduce using rule 92 (atom -> STRING .)
    CONTINUE        reduce using rule 92 (atom -> STRING .)
    RETURN          reduce using rule 92 (atom -> STRING .)
    STRING          reduce using rule 92 (atom -> STRING .)
    NUMBER          reduce using rule 92 (atom -> STRING .)
    LPAREN          reduce using rule 92 (atom -> STRING .)
    LBRACE          reduce using rule 92 (atom -> STRING .)
    $end            reduce using rule 92 (atom -> STRING .)
    RPAREN          reduce using rule 92 (atom -> STRING .)
    COMMA           reduce using rule 92 (atom -> STRING .)
    COLON           reduce using rule 92 (atom -> STRING .)
    INPUT           reduce using rule 92 (atom -> STRING .)
    OUTPUT          reduce using rule 92 (atom -> STRING .)
    MEMORY          reduce using rule 92 (atom -> STRING .)
    MODEL           reduce using rule 92 (atom -> STRING .)
    CHAT            reduce using rule 92 (atom -> STRING .)
    DEDENT          reduce using rule 92 (atom -> STRING .)
    RBRACE          reduce using rule 92 (atom -> STRING .)


state 38

    (93) atom -> NUMBER .

    PLUS            reduce using rule 93 (atom -> NUMBER .)
    MINUS           reduce using rule 93 (atom -> NUMBER .)
    TIMES           reduce using rule 93 (atom -> NUMBER .)
    DIVIDE          reduce using rule 93 (atom -> NUMBER .)
    MOD             reduce using rule 93 (atom -> NUMBER .)
    EQ              reduce using rule 93 (atom -> NUMBER .)
    NEQ             reduce using rule 93 (atom -> NUMBER .)
    LT              reduce using rule 93 (atom -> NUMBER .)
    GT              reduce using rule 93 (atom -> NUMBER .)
    LE              reduce using rule 93 (atom -> NUMBER .)
    GE              reduce using rule 93 (atom -> NUMBER .)
    DOT             reduce using rule 93 (atom -> NUMBER .)
    AGENT           reduce using rule 93 (atom -> NUMBER .)
    CONNECT         reduce using rule 93 (atom -> NUMBER .)
    DEF             reduce using rule 93 (atom -> NUMBER .)
    FOR             reduce using rule 93 (atom -> NUMBER .)
    IF              reduce using rule 93 (atom -> NUMBER .)
    WHILE           reduce using rule 93 (atom -> NUMBER .)
    IDENTIFIER      reduce using rule 93 (atom -> NUMBER .)
    BREAK           reduce using rule 93 (atom -> NUMBER .)
    CONTINUE        reduce using rule 93 (atom -> NUMBER .)
    RETURN          reduce using rule 93 (atom -> NUMBER .)
    STRING          reduce using rule 93 (atom -> NUMBER .)
    NUMBER          reduce using rule 93 (atom -> NUMBER .)
    LPAREN          reduce using rule 93 (atom -> NUMBER .)
    LBRACE          reduce using rule 93 (atom -> NUMBER .)
    $end            reduce using rule 93 (atom -> NUMBER .)
    RPAREN          reduce using rule 93 (atom -> NUMBER .)
    COMMA           reduce using rule 93 (atom -> NUMBER .)
    COLON           reduce using rule 93 (atom -> NUMBER .)
    INPUT           reduce using rule 93 (atom -> NUMBER .)
    OUTPUT          reduce using rule 93 (atom -> NUMBER .)
    MEMORY          reduce using rule 93 (atom -> NUMBER .)
    MODEL           reduce using rule 93 (atom -> NUMBER .)
    CHAT            reduce using rule 93 (atom -> NUMBER .)
    DEDENT          reduce using rule 93 (atom -> NUMBER .)
    RBRACE          reduce using rule 93 (atom -> NUMBER .)


state 39

    (95) list_expr -> LBRACE . list_elements RBRACE
    (100) record_expr -> LBRACE . record_elements RBRACE
    (96) list_elements -> . expr list_elements_tail
    (97) list_elements -> . empty
    (101) record_elements -> . field_assign record_elements_tail
    (102) record_elements -> . empty
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (128) empty -> .
    (105) field_assign -> . IDENTIFIER EQUALS expr
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    RBRACE          reduce using rule 128 (empty -> .)
    IDENTIFIER      shift and go to state 75
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    list_elements                  shift and go to state 70
    record_elements                shift and go to state 71
    expr                           shift and go to state 72
    empty                          shift and go to state 73
    field_assign                   shift and go to state 74
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 40

    (1) program -> global_block program_body .

    $end            reduce using rule 1 (program -> global_block program_body .)


state 41

    (9) global_block -> GLOBAL COLON . INDENT var_decl_list DEDENT

    INDENT          shift and go to state 76


state 42

    (3) program_body -> program_body_item program_body .

    $end            reduce using rule 3 (program_body -> program_body_item program_body .)


state 43

    (32) agent_def -> AGENT IDENTIFIER . COLON INDENT agent_body DEDENT

    COLON           shift and go to state 77


state 44

    (71) assign_stmt -> IDENTIFIER COLON . type EQUALS expr
    (16) type -> . base_type
    (17) type -> . list_type
    (18) type -> . record_type
    (19) type -> . tuple_type
    (20) base_type -> . TYPE_STR
    (21) base_type -> . TYPE_INT
    (22) base_type -> . TYPE_FLOAT
    (23) base_type -> . TYPE_BOOL
    (24) list_type -> . TYPE_LIST LBRACE type RBRACE
    (25) record_type -> . TYPE_RECORD LBRACE field_decl_list RBRACE
    (29) tuple_type -> . TYPE_TUPLE LPAREN type_list_in_tuple RPAREN

    TYPE_STR        shift and go to state 83
    TYPE_INT        shift and go to state 84
    TYPE_FLOAT      shift and go to state 85
    TYPE_BOOL       shift and go to state 86
    TYPE_LIST       shift and go to state 87
    TYPE_RECORD     shift and go to state 88
    TYPE_TUPLE      shift and go to state 89

    type                           shift and go to state 78
    base_type                      shift and go to state 79
    list_type                      shift and go to state 80
    record_type                    shift and go to state 81
    tuple_type                     shift and go to state 82

state 45

    (72) assign_stmt -> IDENTIFIER EQUALS . expr
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 90
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 46

    (112) func_call -> IDENTIFIER LPAREN . arg_list RPAREN
    (113) arg_list -> . expr arg_list_tail
    (114) arg_list -> . empty
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (128) empty -> .
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    RPAREN          reduce using rule 128 (empty -> .)
    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    arg_list                       shift and go to state 91
    expr                           shift and go to state 92
    empty                          shift and go to state 93
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 47

    (46) connect_block -> CONNECT COLON . INDENT connection_list DEDENT

    INDENT          shift and go to state 94


state 48

    (53) func_def -> DEF IDENTIFIER . LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT
    (54) func_def -> DEF IDENTIFIER . LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT

    LPAREN          shift and go to state 95


state 49

    (94) atom -> LPAREN expr . RPAREN
    (107) tuple_elements -> expr . tuple_elements_tail
    (111) field_access -> expr . DOT IDENTIFIER
    (109) tuple_elements_tail -> . COMMA expr tuple_elements_tail
    (110) tuple_elements_tail -> . empty
    (128) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 96
    DOT             shift and go to state 54
    COMMA           shift and go to state 98

  ! RPAREN          [ reduce using rule 128 (empty -> .) ]

    tuple_elements_tail            shift and go to state 97
    empty                          shift and go to state 99

state 50

    (106) tuple_expr -> LPAREN tuple_elements . RPAREN

    RPAREN          shift and go to state 100


state 51

    (108) tuple_elements -> empty .

    RPAREN          reduce using rule 108 (tuple_elements -> empty .)


state 52

    (91) atom -> IDENTIFIER .
    (112) func_call -> IDENTIFIER . LPAREN arg_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    PLUS            reduce using rule 91 (atom -> IDENTIFIER .)
    MINUS           reduce using rule 91 (atom -> IDENTIFIER .)
    TIMES           reduce using rule 91 (atom -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (atom -> IDENTIFIER .)
    MOD             reduce using rule 91 (atom -> IDENTIFIER .)
    EQ              reduce using rule 91 (atom -> IDENTIFIER .)
    NEQ             reduce using rule 91 (atom -> IDENTIFIER .)
    LT              reduce using rule 91 (atom -> IDENTIFIER .)
    GT              reduce using rule 91 (atom -> IDENTIFIER .)
    LE              reduce using rule 91 (atom -> IDENTIFIER .)
    GE              reduce using rule 91 (atom -> IDENTIFIER .)
    RPAREN          reduce using rule 91 (atom -> IDENTIFIER .)
    DOT             reduce using rule 91 (atom -> IDENTIFIER .)
    COMMA           reduce using rule 91 (atom -> IDENTIFIER .)
    COLON           reduce using rule 91 (atom -> IDENTIFIER .)
    AGENT           reduce using rule 91 (atom -> IDENTIFIER .)
    CONNECT         reduce using rule 91 (atom -> IDENTIFIER .)
    DEF             reduce using rule 91 (atom -> IDENTIFIER .)
    FOR             reduce using rule 91 (atom -> IDENTIFIER .)
    IF              reduce using rule 91 (atom -> IDENTIFIER .)
    WHILE           reduce using rule 91 (atom -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 91 (atom -> IDENTIFIER .)
    BREAK           reduce using rule 91 (atom -> IDENTIFIER .)
    CONTINUE        reduce using rule 91 (atom -> IDENTIFIER .)
    RETURN          reduce using rule 91 (atom -> IDENTIFIER .)
    STRING          reduce using rule 91 (atom -> IDENTIFIER .)
    NUMBER          reduce using rule 91 (atom -> IDENTIFIER .)
    LBRACE          reduce using rule 91 (atom -> IDENTIFIER .)
    $end            reduce using rule 91 (atom -> IDENTIFIER .)
    INPUT           reduce using rule 91 (atom -> IDENTIFIER .)
    OUTPUT          reduce using rule 91 (atom -> IDENTIFIER .)
    MEMORY          reduce using rule 91 (atom -> IDENTIFIER .)
    MODEL           reduce using rule 91 (atom -> IDENTIFIER .)
    CHAT            reduce using rule 91 (atom -> IDENTIFIER .)
    DEDENT          reduce using rule 91 (atom -> IDENTIFIER .)
    RBRACE          reduce using rule 91 (atom -> IDENTIFIER .)
    LPAREN          shift and go to state 46

  ! LPAREN          [ reduce using rule 91 (atom -> IDENTIFIER .) ]


state 53

    (76) for_stmt -> FOR IDENTIFIER . IN expr COLON stmt_block

    IN              shift and go to state 101


state 54

    (111) field_access -> expr DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 102


state 55

    (79) if_stmt -> IF expr . COLON stmt_block ELSE COLON stmt_block
    (80) if_stmt -> IF expr . COLON stmt_block
    (111) field_access -> expr . DOT IDENTIFIER

    COLON           shift and go to state 103
    DOT             shift and go to state 54


state 56

    (81) while_stmt -> WHILE expr . COLON stmt_block
    (111) field_access -> expr . DOT IDENTIFIER

    COLON           shift and go to state 104
    DOT             shift and go to state 54


state 57

    (74) return_stmt -> RETURN expr .
    (111) field_access -> expr . DOT IDENTIFIER

    AGENT           reduce using rule 74 (return_stmt -> RETURN expr .)
    CONNECT         reduce using rule 74 (return_stmt -> RETURN expr .)
    DEF             reduce using rule 74 (return_stmt -> RETURN expr .)
    FOR             reduce using rule 74 (return_stmt -> RETURN expr .)
    IF              reduce using rule 74 (return_stmt -> RETURN expr .)
    WHILE           reduce using rule 74 (return_stmt -> RETURN expr .)
    IDENTIFIER      reduce using rule 74 (return_stmt -> RETURN expr .)
    BREAK           reduce using rule 74 (return_stmt -> RETURN expr .)
    CONTINUE        reduce using rule 74 (return_stmt -> RETURN expr .)
    RETURN          reduce using rule 74 (return_stmt -> RETURN expr .)
    STRING          reduce using rule 74 (return_stmt -> RETURN expr .)
    NUMBER          reduce using rule 74 (return_stmt -> RETURN expr .)
    LPAREN          reduce using rule 74 (return_stmt -> RETURN expr .)
    LBRACE          reduce using rule 74 (return_stmt -> RETURN expr .)
    $end            reduce using rule 74 (return_stmt -> RETURN expr .)
    INPUT           reduce using rule 74 (return_stmt -> RETURN expr .)
    OUTPUT          reduce using rule 74 (return_stmt -> RETURN expr .)
    MEMORY          reduce using rule 74 (return_stmt -> RETURN expr .)
    MODEL           reduce using rule 74 (return_stmt -> RETURN expr .)
    CHAT            reduce using rule 74 (return_stmt -> RETURN expr .)
    DEDENT          reduce using rule 74 (return_stmt -> RETURN expr .)
    DOT             shift and go to state 54


state 58

    (82) expr -> expr_head bin_op . expr_tail
    (90) expr_tail -> . expr
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr_head                      shift and go to state 30
    expr_tail                      shift and go to state 105
    expr                           shift and go to state 106
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 59

    (117) bin_op -> PLUS .

    IDENTIFIER      reduce using rule 117 (bin_op -> PLUS .)
    STRING          reduce using rule 117 (bin_op -> PLUS .)
    NUMBER          reduce using rule 117 (bin_op -> PLUS .)
    LPAREN          reduce using rule 117 (bin_op -> PLUS .)
    LBRACE          reduce using rule 117 (bin_op -> PLUS .)


state 60

    (118) bin_op -> MINUS .

    IDENTIFIER      reduce using rule 118 (bin_op -> MINUS .)
    STRING          reduce using rule 118 (bin_op -> MINUS .)
    NUMBER          reduce using rule 118 (bin_op -> MINUS .)
    LPAREN          reduce using rule 118 (bin_op -> MINUS .)
    LBRACE          reduce using rule 118 (bin_op -> MINUS .)


state 61

    (119) bin_op -> TIMES .

    IDENTIFIER      reduce using rule 119 (bin_op -> TIMES .)
    STRING          reduce using rule 119 (bin_op -> TIMES .)
    NUMBER          reduce using rule 119 (bin_op -> TIMES .)
    LPAREN          reduce using rule 119 (bin_op -> TIMES .)
    LBRACE          reduce using rule 119 (bin_op -> TIMES .)


state 62

    (120) bin_op -> DIVIDE .

    IDENTIFIER      reduce using rule 120 (bin_op -> DIVIDE .)
    STRING          reduce using rule 120 (bin_op -> DIVIDE .)
    NUMBER          reduce using rule 120 (bin_op -> DIVIDE .)
    LPAREN          reduce using rule 120 (bin_op -> DIVIDE .)
    LBRACE          reduce using rule 120 (bin_op -> DIVIDE .)


state 63

    (121) bin_op -> MOD .

    IDENTIFIER      reduce using rule 121 (bin_op -> MOD .)
    STRING          reduce using rule 121 (bin_op -> MOD .)
    NUMBER          reduce using rule 121 (bin_op -> MOD .)
    LPAREN          reduce using rule 121 (bin_op -> MOD .)
    LBRACE          reduce using rule 121 (bin_op -> MOD .)


state 64

    (122) bin_op -> EQ .

    IDENTIFIER      reduce using rule 122 (bin_op -> EQ .)
    STRING          reduce using rule 122 (bin_op -> EQ .)
    NUMBER          reduce using rule 122 (bin_op -> EQ .)
    LPAREN          reduce using rule 122 (bin_op -> EQ .)
    LBRACE          reduce using rule 122 (bin_op -> EQ .)


state 65

    (123) bin_op -> NEQ .

    IDENTIFIER      reduce using rule 123 (bin_op -> NEQ .)
    STRING          reduce using rule 123 (bin_op -> NEQ .)
    NUMBER          reduce using rule 123 (bin_op -> NEQ .)
    LPAREN          reduce using rule 123 (bin_op -> NEQ .)
    LBRACE          reduce using rule 123 (bin_op -> NEQ .)


state 66

    (124) bin_op -> LT .

    IDENTIFIER      reduce using rule 124 (bin_op -> LT .)
    STRING          reduce using rule 124 (bin_op -> LT .)
    NUMBER          reduce using rule 124 (bin_op -> LT .)
    LPAREN          reduce using rule 124 (bin_op -> LT .)
    LBRACE          reduce using rule 124 (bin_op -> LT .)


state 67

    (125) bin_op -> GT .

    IDENTIFIER      reduce using rule 125 (bin_op -> GT .)
    STRING          reduce using rule 125 (bin_op -> GT .)
    NUMBER          reduce using rule 125 (bin_op -> GT .)
    LPAREN          reduce using rule 125 (bin_op -> GT .)
    LBRACE          reduce using rule 125 (bin_op -> GT .)


state 68

    (126) bin_op -> LE .

    IDENTIFIER      reduce using rule 126 (bin_op -> LE .)
    STRING          reduce using rule 126 (bin_op -> LE .)
    NUMBER          reduce using rule 126 (bin_op -> LE .)
    LPAREN          reduce using rule 126 (bin_op -> LE .)
    LBRACE          reduce using rule 126 (bin_op -> LE .)


state 69

    (127) bin_op -> GE .

    IDENTIFIER      reduce using rule 127 (bin_op -> GE .)
    STRING          reduce using rule 127 (bin_op -> GE .)
    NUMBER          reduce using rule 127 (bin_op -> GE .)
    LPAREN          reduce using rule 127 (bin_op -> GE .)
    LBRACE          reduce using rule 127 (bin_op -> GE .)


state 70

    (95) list_expr -> LBRACE list_elements . RBRACE

    RBRACE          shift and go to state 107


state 71

    (100) record_expr -> LBRACE record_elements . RBRACE

    RBRACE          shift and go to state 108


state 72

    (96) list_elements -> expr . list_elements_tail
    (111) field_access -> expr . DOT IDENTIFIER
    (98) list_elements_tail -> . COMMA expr list_elements_tail
    (99) list_elements_tail -> . empty
    (128) empty -> .

    DOT             shift and go to state 54
    COMMA           shift and go to state 110
    RBRACE          reduce using rule 128 (empty -> .)

    list_elements_tail             shift and go to state 109
    empty                          shift and go to state 111

state 73

    (97) list_elements -> empty .
    (102) record_elements -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 97 (list_elements -> empty .)
    RBRACE          reduce using rule 97 (list_elements -> empty .)

  ! RBRACE          [ reduce using rule 102 (record_elements -> empty .) ]


state 74

    (101) record_elements -> field_assign . record_elements_tail
    (103) record_elements_tail -> . COMMA field_assign record_elements_tail
    (104) record_elements_tail -> . empty
    (128) empty -> .

    COMMA           shift and go to state 113
    RBRACE          reduce using rule 128 (empty -> .)

    record_elements_tail           shift and go to state 112
    empty                          shift and go to state 114

state 75

    (105) field_assign -> IDENTIFIER . EQUALS expr
    (91) atom -> IDENTIFIER .
    (112) func_call -> IDENTIFIER . LPAREN arg_list RPAREN

    EQUALS          shift and go to state 115
    PLUS            reduce using rule 91 (atom -> IDENTIFIER .)
    MINUS           reduce using rule 91 (atom -> IDENTIFIER .)
    TIMES           reduce using rule 91 (atom -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (atom -> IDENTIFIER .)
    MOD             reduce using rule 91 (atom -> IDENTIFIER .)
    EQ              reduce using rule 91 (atom -> IDENTIFIER .)
    NEQ             reduce using rule 91 (atom -> IDENTIFIER .)
    LT              reduce using rule 91 (atom -> IDENTIFIER .)
    GT              reduce using rule 91 (atom -> IDENTIFIER .)
    LE              reduce using rule 91 (atom -> IDENTIFIER .)
    GE              reduce using rule 91 (atom -> IDENTIFIER .)
    DOT             reduce using rule 91 (atom -> IDENTIFIER .)
    COMMA           reduce using rule 91 (atom -> IDENTIFIER .)
    RBRACE          reduce using rule 91 (atom -> IDENTIFIER .)
    LPAREN          shift and go to state 46


state 76

    (9) global_block -> GLOBAL COLON INDENT . var_decl_list DEDENT
    (10) var_decl_list -> . var_decl var_decl_list
    (11) var_decl_list -> . var_decl
    (12) var_decl -> . IDENTIFIER COLON type EQUALS expr
    (13) var_decl -> . IDENTIFIER COLON type
    (14) var_decl -> . IDENTIFIER EQUALS expr
    (15) var_decl -> . IDENTIFIER

    IDENTIFIER      shift and go to state 118

    var_decl_list                  shift and go to state 116
    var_decl                       shift and go to state 117

state 77

    (32) agent_def -> AGENT IDENTIFIER COLON . INDENT agent_body DEDENT

    INDENT          shift and go to state 119


state 78

    (71) assign_stmt -> IDENTIFIER COLON type . EQUALS expr

    EQUALS          shift and go to state 120


state 79

    (16) type -> base_type .

    EQUALS          reduce using rule 16 (type -> base_type .)
    RBRACE          reduce using rule 16 (type -> base_type .)
    RPAREN          reduce using rule 16 (type -> base_type .)
    COMMA           reduce using rule 16 (type -> base_type .)
    IDENTIFIER      reduce using rule 16 (type -> base_type .)
    DEDENT          reduce using rule 16 (type -> base_type .)
    COLON           reduce using rule 16 (type -> base_type .)


state 80

    (17) type -> list_type .

    EQUALS          reduce using rule 17 (type -> list_type .)
    RBRACE          reduce using rule 17 (type -> list_type .)
    RPAREN          reduce using rule 17 (type -> list_type .)
    COMMA           reduce using rule 17 (type -> list_type .)
    IDENTIFIER      reduce using rule 17 (type -> list_type .)
    DEDENT          reduce using rule 17 (type -> list_type .)
    COLON           reduce using rule 17 (type -> list_type .)


state 81

    (18) type -> record_type .

    EQUALS          reduce using rule 18 (type -> record_type .)
    RBRACE          reduce using rule 18 (type -> record_type .)
    RPAREN          reduce using rule 18 (type -> record_type .)
    COMMA           reduce using rule 18 (type -> record_type .)
    IDENTIFIER      reduce using rule 18 (type -> record_type .)
    DEDENT          reduce using rule 18 (type -> record_type .)
    COLON           reduce using rule 18 (type -> record_type .)


state 82

    (19) type -> tuple_type .

    EQUALS          reduce using rule 19 (type -> tuple_type .)
    RBRACE          reduce using rule 19 (type -> tuple_type .)
    RPAREN          reduce using rule 19 (type -> tuple_type .)
    COMMA           reduce using rule 19 (type -> tuple_type .)
    IDENTIFIER      reduce using rule 19 (type -> tuple_type .)
    DEDENT          reduce using rule 19 (type -> tuple_type .)
    COLON           reduce using rule 19 (type -> tuple_type .)


state 83

    (20) base_type -> TYPE_STR .

    EQUALS          reduce using rule 20 (base_type -> TYPE_STR .)
    RBRACE          reduce using rule 20 (base_type -> TYPE_STR .)
    RPAREN          reduce using rule 20 (base_type -> TYPE_STR .)
    COMMA           reduce using rule 20 (base_type -> TYPE_STR .)
    IDENTIFIER      reduce using rule 20 (base_type -> TYPE_STR .)
    DEDENT          reduce using rule 20 (base_type -> TYPE_STR .)
    COLON           reduce using rule 20 (base_type -> TYPE_STR .)


state 84

    (21) base_type -> TYPE_INT .

    EQUALS          reduce using rule 21 (base_type -> TYPE_INT .)
    RBRACE          reduce using rule 21 (base_type -> TYPE_INT .)
    RPAREN          reduce using rule 21 (base_type -> TYPE_INT .)
    COMMA           reduce using rule 21 (base_type -> TYPE_INT .)
    IDENTIFIER      reduce using rule 21 (base_type -> TYPE_INT .)
    DEDENT          reduce using rule 21 (base_type -> TYPE_INT .)
    COLON           reduce using rule 21 (base_type -> TYPE_INT .)


state 85

    (22) base_type -> TYPE_FLOAT .

    EQUALS          reduce using rule 22 (base_type -> TYPE_FLOAT .)
    RBRACE          reduce using rule 22 (base_type -> TYPE_FLOAT .)
    RPAREN          reduce using rule 22 (base_type -> TYPE_FLOAT .)
    COMMA           reduce using rule 22 (base_type -> TYPE_FLOAT .)
    IDENTIFIER      reduce using rule 22 (base_type -> TYPE_FLOAT .)
    DEDENT          reduce using rule 22 (base_type -> TYPE_FLOAT .)
    COLON           reduce using rule 22 (base_type -> TYPE_FLOAT .)


state 86

    (23) base_type -> TYPE_BOOL .

    EQUALS          reduce using rule 23 (base_type -> TYPE_BOOL .)
    RBRACE          reduce using rule 23 (base_type -> TYPE_BOOL .)
    RPAREN          reduce using rule 23 (base_type -> TYPE_BOOL .)
    COMMA           reduce using rule 23 (base_type -> TYPE_BOOL .)
    IDENTIFIER      reduce using rule 23 (base_type -> TYPE_BOOL .)
    DEDENT          reduce using rule 23 (base_type -> TYPE_BOOL .)
    COLON           reduce using rule 23 (base_type -> TYPE_BOOL .)


state 87

    (24) list_type -> TYPE_LIST . LBRACE type RBRACE

    LBRACE          shift and go to state 121


state 88

    (25) record_type -> TYPE_RECORD . LBRACE field_decl_list RBRACE

    LBRACE          shift and go to state 122


state 89

    (29) tuple_type -> TYPE_TUPLE . LPAREN type_list_in_tuple RPAREN

    LPAREN          shift and go to state 123


state 90

    (72) assign_stmt -> IDENTIFIER EQUALS expr .
    (111) field_access -> expr . DOT IDENTIFIER

    AGENT           reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    CONNECT         reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    DEF             reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    FOR             reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    IF              reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    WHILE           reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    IDENTIFIER      reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    BREAK           reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    CONTINUE        reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    RETURN          reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    STRING          reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    NUMBER          reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    LPAREN          reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    LBRACE          reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    $end            reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    INPUT           reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    OUTPUT          reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    MEMORY          reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    MODEL           reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    CHAT            reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    DEDENT          reduce using rule 72 (assign_stmt -> IDENTIFIER EQUALS expr .)
    DOT             shift and go to state 54


state 91

    (112) func_call -> IDENTIFIER LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 124


state 92

    (113) arg_list -> expr . arg_list_tail
    (111) field_access -> expr . DOT IDENTIFIER
    (115) arg_list_tail -> . COMMA expr arg_list_tail
    (116) arg_list_tail -> . empty
    (128) empty -> .

    DOT             shift and go to state 54
    COMMA           shift and go to state 126
    RPAREN          reduce using rule 128 (empty -> .)

    arg_list_tail                  shift and go to state 125
    empty                          shift and go to state 127

state 93

    (114) arg_list -> empty .

    RPAREN          reduce using rule 114 (arg_list -> empty .)


state 94

    (46) connect_block -> CONNECT COLON INDENT . connection_list DEDENT
    (47) connection_list -> . connection connection_list
    (48) connection_list -> . connection
    (49) connection -> . IDENTIFIER COLON type agent_ref ARROW agent_ref

    IDENTIFIER      shift and go to state 130

    connection_list                shift and go to state 128
    connection                     shift and go to state 129

state 95

    (53) func_def -> DEF IDENTIFIER LPAREN . param_list RPAREN COLON type COLON INDENT stmt_block DEDENT
    (54) func_def -> DEF IDENTIFIER LPAREN . param_list RPAREN COLON INDENT stmt_block DEDENT
    (55) param_list -> . param_decl param_list_tail
    (56) param_list -> . empty
    (59) param_decl -> . var_decl
    (128) empty -> .
    (12) var_decl -> . IDENTIFIER COLON type EQUALS expr
    (13) var_decl -> . IDENTIFIER COLON type
    (14) var_decl -> . IDENTIFIER EQUALS expr
    (15) var_decl -> . IDENTIFIER

    RPAREN          reduce using rule 128 (empty -> .)
    IDENTIFIER      shift and go to state 118

    param_list                     shift and go to state 131
    param_decl                     shift and go to state 132
    empty                          shift and go to state 133
    var_decl                       shift and go to state 134

state 96

    (94) atom -> LPAREN expr RPAREN .

    PLUS            reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    MOD             reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    EQ              reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    NEQ             reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    LT              reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    GT              reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    LE              reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    GE              reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    DOT             reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    AGENT           reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    CONNECT         reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    DEF             reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    FOR             reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    IF              reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    WHILE           reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    IDENTIFIER      reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    BREAK           reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    CONTINUE        reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    RETURN          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    STRING          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    NUMBER          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    LPAREN          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    LBRACE          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    $end            reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    COLON           reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    INPUT           reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    OUTPUT          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    MEMORY          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    MODEL           reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    CHAT            reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    DEDENT          reduce using rule 94 (atom -> LPAREN expr RPAREN .)
    RBRACE          reduce using rule 94 (atom -> LPAREN expr RPAREN .)


state 97

    (107) tuple_elements -> expr tuple_elements_tail .

    RPAREN          reduce using rule 107 (tuple_elements -> expr tuple_elements_tail .)


state 98

    (109) tuple_elements_tail -> COMMA . expr tuple_elements_tail
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 135
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 99

    (110) tuple_elements_tail -> empty .

    RPAREN          reduce using rule 110 (tuple_elements_tail -> empty .)


state 100

    (106) tuple_expr -> LPAREN tuple_elements RPAREN .

    PLUS            reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    MINUS           reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    TIMES           reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    DIVIDE          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    MOD             reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    EQ              reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    NEQ             reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    LT              reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    GT              reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    LE              reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    GE              reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    DOT             reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    AGENT           reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    CONNECT         reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    DEF             reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    FOR             reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    IF              reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    WHILE           reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    IDENTIFIER      reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    BREAK           reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    CONTINUE        reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    RETURN          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    STRING          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    NUMBER          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    LPAREN          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    LBRACE          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    $end            reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    RPAREN          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    COMMA           reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    COLON           reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    INPUT           reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    OUTPUT          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    MEMORY          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    MODEL           reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    CHAT            reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    DEDENT          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)
    RBRACE          reduce using rule 106 (tuple_expr -> LPAREN tuple_elements RPAREN .)


state 101

    (76) for_stmt -> FOR IDENTIFIER IN . expr COLON stmt_block
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 136
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 102

    (111) field_access -> expr DOT IDENTIFIER .

    PLUS            reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    MINUS           reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    TIMES           reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    MOD             reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    EQ              reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    NEQ             reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    LT              reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    GT              reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    LE              reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    GE              reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    DOT             reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    AGENT           reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    CONNECT         reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    DEF             reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    FOR             reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    IF              reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    WHILE           reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    IDENTIFIER      reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    BREAK           reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    CONTINUE        reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    RETURN          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    STRING          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    NUMBER          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    LPAREN          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    LBRACE          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    $end            reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    RPAREN          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    COMMA           reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    COLON           reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    INPUT           reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    OUTPUT          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    MEMORY          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    MODEL           reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    CHAT            reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    DEDENT          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)
    RBRACE          reduce using rule 111 (field_access -> expr DOT IDENTIFIER .)


state 103

    (79) if_stmt -> IF expr COLON . stmt_block ELSE COLON stmt_block
    (80) if_stmt -> IF expr COLON . stmt_block
    (60) stmt_block -> . INDENT statement_list DEDENT

    INDENT          shift and go to state 138

    stmt_block                     shift and go to state 137

state 104

    (81) while_stmt -> WHILE expr COLON . stmt_block
    (60) stmt_block -> . INDENT statement_list DEDENT

    INDENT          shift and go to state 138

    stmt_block                     shift and go to state 139

state 105

    (82) expr -> expr_head bin_op expr_tail .

    DOT             reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    AGENT           reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    CONNECT         reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    DEF             reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    FOR             reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    IF              reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    WHILE           reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    IDENTIFIER      reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    BREAK           reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    CONTINUE        reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    RETURN          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    STRING          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    NUMBER          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    LPAREN          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    LBRACE          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    $end            reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    RPAREN          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    COMMA           reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    COLON           reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    INPUT           reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    OUTPUT          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    MEMORY          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    MODEL           reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    CHAT            reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    DEDENT          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)
    RBRACE          reduce using rule 82 (expr -> expr_head bin_op expr_tail .)


state 106

    (90) expr_tail -> expr .
    (111) field_access -> expr . DOT IDENTIFIER

  ! shift/reduce conflict for DOT resolved as shift
    AGENT           reduce using rule 90 (expr_tail -> expr .)
    CONNECT         reduce using rule 90 (expr_tail -> expr .)
    DEF             reduce using rule 90 (expr_tail -> expr .)
    FOR             reduce using rule 90 (expr_tail -> expr .)
    IF              reduce using rule 90 (expr_tail -> expr .)
    WHILE           reduce using rule 90 (expr_tail -> expr .)
    IDENTIFIER      reduce using rule 90 (expr_tail -> expr .)
    BREAK           reduce using rule 90 (expr_tail -> expr .)
    CONTINUE        reduce using rule 90 (expr_tail -> expr .)
    RETURN          reduce using rule 90 (expr_tail -> expr .)
    STRING          reduce using rule 90 (expr_tail -> expr .)
    NUMBER          reduce using rule 90 (expr_tail -> expr .)
    LPAREN          reduce using rule 90 (expr_tail -> expr .)
    LBRACE          reduce using rule 90 (expr_tail -> expr .)
    $end            reduce using rule 90 (expr_tail -> expr .)
    RPAREN          reduce using rule 90 (expr_tail -> expr .)
    COMMA           reduce using rule 90 (expr_tail -> expr .)
    COLON           reduce using rule 90 (expr_tail -> expr .)
    INPUT           reduce using rule 90 (expr_tail -> expr .)
    OUTPUT          reduce using rule 90 (expr_tail -> expr .)
    MEMORY          reduce using rule 90 (expr_tail -> expr .)
    MODEL           reduce using rule 90 (expr_tail -> expr .)
    CHAT            reduce using rule 90 (expr_tail -> expr .)
    DEDENT          reduce using rule 90 (expr_tail -> expr .)
    RBRACE          reduce using rule 90 (expr_tail -> expr .)
    DOT             shift and go to state 54

  ! DOT             [ reduce using rule 90 (expr_tail -> expr .) ]


state 107

    (95) list_expr -> LBRACE list_elements RBRACE .

    PLUS            reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    MINUS           reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    TIMES           reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    DIVIDE          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    MOD             reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    EQ              reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    NEQ             reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    LT              reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    GT              reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    LE              reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    GE              reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    DOT             reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    AGENT           reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    CONNECT         reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    DEF             reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    FOR             reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    IF              reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    WHILE           reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    IDENTIFIER      reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    BREAK           reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    CONTINUE        reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    RETURN          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    STRING          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    NUMBER          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    LPAREN          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    LBRACE          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    $end            reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    RPAREN          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    COMMA           reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    COLON           reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    INPUT           reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    OUTPUT          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    MEMORY          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    MODEL           reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    CHAT            reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    DEDENT          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)
    RBRACE          reduce using rule 95 (list_expr -> LBRACE list_elements RBRACE .)


state 108

    (100) record_expr -> LBRACE record_elements RBRACE .

    PLUS            reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    MINUS           reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    TIMES           reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    DIVIDE          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    MOD             reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    EQ              reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    NEQ             reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    LT              reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    GT              reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    LE              reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    GE              reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    DOT             reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    AGENT           reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    CONNECT         reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    DEF             reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    FOR             reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    IF              reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    WHILE           reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    IDENTIFIER      reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    BREAK           reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    CONTINUE        reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    RETURN          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    STRING          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    NUMBER          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    LPAREN          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    LBRACE          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    $end            reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    RPAREN          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    COMMA           reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    COLON           reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    INPUT           reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    OUTPUT          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    MEMORY          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    MODEL           reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    CHAT            reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    DEDENT          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)
    RBRACE          reduce using rule 100 (record_expr -> LBRACE record_elements RBRACE .)


state 109

    (96) list_elements -> expr list_elements_tail .

    RBRACE          reduce using rule 96 (list_elements -> expr list_elements_tail .)


state 110

    (98) list_elements_tail -> COMMA . expr list_elements_tail
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 140
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 111

    (99) list_elements_tail -> empty .

    RBRACE          reduce using rule 99 (list_elements_tail -> empty .)


state 112

    (101) record_elements -> field_assign record_elements_tail .

    RBRACE          reduce using rule 101 (record_elements -> field_assign record_elements_tail .)


state 113

    (103) record_elements_tail -> COMMA . field_assign record_elements_tail
    (105) field_assign -> . IDENTIFIER EQUALS expr

    IDENTIFIER      shift and go to state 142

    field_assign                   shift and go to state 141

state 114

    (104) record_elements_tail -> empty .

    RBRACE          reduce using rule 104 (record_elements_tail -> empty .)


state 115

    (105) field_assign -> IDENTIFIER EQUALS . expr
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 143
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 116

    (9) global_block -> GLOBAL COLON INDENT var_decl_list . DEDENT

    DEDENT          shift and go to state 144


state 117

    (10) var_decl_list -> var_decl . var_decl_list
    (11) var_decl_list -> var_decl .
    (10) var_decl_list -> . var_decl var_decl_list
    (11) var_decl_list -> . var_decl
    (12) var_decl -> . IDENTIFIER COLON type EQUALS expr
    (13) var_decl -> . IDENTIFIER COLON type
    (14) var_decl -> . IDENTIFIER EQUALS expr
    (15) var_decl -> . IDENTIFIER

    DEDENT          reduce using rule 11 (var_decl_list -> var_decl .)
    IDENTIFIER      shift and go to state 118

    var_decl                       shift and go to state 117
    var_decl_list                  shift and go to state 145

state 118

    (12) var_decl -> IDENTIFIER . COLON type EQUALS expr
    (13) var_decl -> IDENTIFIER . COLON type
    (14) var_decl -> IDENTIFIER . EQUALS expr
    (15) var_decl -> IDENTIFIER .

    COLON           shift and go to state 146
    EQUALS          shift and go to state 147
    IDENTIFIER      reduce using rule 15 (var_decl -> IDENTIFIER .)
    DEDENT          reduce using rule 15 (var_decl -> IDENTIFIER .)
    COMMA           reduce using rule 15 (var_decl -> IDENTIFIER .)
    RPAREN          reduce using rule 15 (var_decl -> IDENTIFIER .)


state 119

    (32) agent_def -> AGENT IDENTIFIER COLON INDENT . agent_body DEDENT
    (33) agent_body -> . agent_body_item agent_body
    (34) agent_body -> . agent_body_item
    (35) agent_body_item -> . input_block
    (36) agent_body_item -> . output_block
    (37) agent_body_item -> . memory_block
    (38) agent_body_item -> . model_block
    (39) agent_body_item -> . statement
    (40) agent_body_item -> . chat_block
    (41) input_block -> . INPUT COLON INDENT var_decl_list DEDENT
    (42) output_block -> . OUTPUT COLON INDENT var_decl_list DEDENT
    (43) memory_block -> . MEMORY COLON INDENT var_decl_list DEDENT
    (44) model_block -> . MODEL COLON STRING
    (63) statement -> . for_stmt
    (64) statement -> . if_stmt
    (65) statement -> . while_stmt
    (66) statement -> . assign_stmt
    (67) statement -> . expr_stmt
    (68) statement -> . break_stmt
    (69) statement -> . continue_stmt
    (70) statement -> . return_stmt
    (45) chat_block -> . CHAT IDENTIFIER COLON TRIPLE_STRING
    (76) for_stmt -> . FOR IDENTIFIER IN expr COLON stmt_block
    (79) if_stmt -> . IF expr COLON stmt_block ELSE COLON stmt_block
    (80) if_stmt -> . IF expr COLON stmt_block
    (81) while_stmt -> . WHILE expr COLON stmt_block
    (71) assign_stmt -> . IDENTIFIER COLON type EQUALS expr
    (72) assign_stmt -> . IDENTIFIER EQUALS expr
    (73) expr_stmt -> . expr
    (77) break_stmt -> . BREAK
    (78) continue_stmt -> . CONTINUE
    (74) return_stmt -> . RETURN expr
    (75) return_stmt -> . RETURN
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    INPUT           shift and go to state 156
    OUTPUT          shift and go to state 157
    MEMORY          shift and go to state 158
    MODEL           shift and go to state 159
    CHAT            shift and go to state 160
    FOR             shift and go to state 23
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    IDENTIFIER      shift and go to state 19
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    agent_body                     shift and go to state 148
    agent_body_item                shift and go to state 149
    input_block                    shift and go to state 150
    output_block                   shift and go to state 151
    memory_block                   shift and go to state 152
    model_block                    shift and go to state 153
    statement                      shift and go to state 154
    chat_block                     shift and go to state 155
    for_stmt                       shift and go to state 10
    if_stmt                        shift and go to state 11
    while_stmt                     shift and go to state 12
    assign_stmt                    shift and go to state 13
    expr_stmt                      shift and go to state 14
    break_stmt                     shift and go to state 15
    continue_stmt                  shift and go to state 16
    return_stmt                    shift and go to state 17
    expr                           shift and go to state 24
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 120

    (71) assign_stmt -> IDENTIFIER COLON type EQUALS . expr
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 161
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 121

    (24) list_type -> TYPE_LIST LBRACE . type RBRACE
    (16) type -> . base_type
    (17) type -> . list_type
    (18) type -> . record_type
    (19) type -> . tuple_type
    (20) base_type -> . TYPE_STR
    (21) base_type -> . TYPE_INT
    (22) base_type -> . TYPE_FLOAT
    (23) base_type -> . TYPE_BOOL
    (24) list_type -> . TYPE_LIST LBRACE type RBRACE
    (25) record_type -> . TYPE_RECORD LBRACE field_decl_list RBRACE
    (29) tuple_type -> . TYPE_TUPLE LPAREN type_list_in_tuple RPAREN

    TYPE_STR        shift and go to state 83
    TYPE_INT        shift and go to state 84
    TYPE_FLOAT      shift and go to state 85
    TYPE_BOOL       shift and go to state 86
    TYPE_LIST       shift and go to state 87
    TYPE_RECORD     shift and go to state 88
    TYPE_TUPLE      shift and go to state 89

    type                           shift and go to state 162
    base_type                      shift and go to state 79
    list_type                      shift and go to state 80
    record_type                    shift and go to state 81
    tuple_type                     shift and go to state 82

state 122

    (25) record_type -> TYPE_RECORD LBRACE . field_decl_list RBRACE
    (26) field_decl_list -> . field_decl field_decl_list
    (27) field_decl_list -> . field_decl
    (28) field_decl -> . IDENTIFIER COLON type

    IDENTIFIER      shift and go to state 165

    field_decl_list                shift and go to state 163
    field_decl                     shift and go to state 164

state 123

    (29) tuple_type -> TYPE_TUPLE LPAREN . type_list_in_tuple RPAREN
    (30) type_list_in_tuple -> . type_list_in_tuple COMMA type
    (31) type_list_in_tuple -> . type
    (16) type -> . base_type
    (17) type -> . list_type
    (18) type -> . record_type
    (19) type -> . tuple_type
    (20) base_type -> . TYPE_STR
    (21) base_type -> . TYPE_INT
    (22) base_type -> . TYPE_FLOAT
    (23) base_type -> . TYPE_BOOL
    (24) list_type -> . TYPE_LIST LBRACE type RBRACE
    (25) record_type -> . TYPE_RECORD LBRACE field_decl_list RBRACE
    (29) tuple_type -> . TYPE_TUPLE LPAREN type_list_in_tuple RPAREN

    TYPE_STR        shift and go to state 83
    TYPE_INT        shift and go to state 84
    TYPE_FLOAT      shift and go to state 85
    TYPE_BOOL       shift and go to state 86
    TYPE_LIST       shift and go to state 87
    TYPE_RECORD     shift and go to state 88
    TYPE_TUPLE      shift and go to state 89

    type_list_in_tuple             shift and go to state 166
    type                           shift and go to state 167
    base_type                      shift and go to state 79
    list_type                      shift and go to state 80
    record_type                    shift and go to state 81
    tuple_type                     shift and go to state 82

state 124

    (112) func_call -> IDENTIFIER LPAREN arg_list RPAREN .

    PLUS            reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    MOD             reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    EQ              reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    NEQ             reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    LT              reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    GT              reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    LE              reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    GE              reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    DOT             reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    AGENT           reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    CONNECT         reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    DEF             reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    FOR             reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    IF              reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    WHILE           reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    IDENTIFIER      reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    BREAK           reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    CONTINUE        reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    RETURN          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    STRING          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    NUMBER          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    LPAREN          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    LBRACE          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    $end            reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    COLON           reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    INPUT           reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    OUTPUT          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    MEMORY          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    MODEL           reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    CHAT            reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    DEDENT          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 112 (func_call -> IDENTIFIER LPAREN arg_list RPAREN .)


state 125

    (113) arg_list -> expr arg_list_tail .

    RPAREN          reduce using rule 113 (arg_list -> expr arg_list_tail .)


state 126

    (115) arg_list_tail -> COMMA . expr arg_list_tail
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 168
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 127

    (116) arg_list_tail -> empty .

    RPAREN          reduce using rule 116 (arg_list_tail -> empty .)


state 128

    (46) connect_block -> CONNECT COLON INDENT connection_list . DEDENT

    DEDENT          shift and go to state 169


state 129

    (47) connection_list -> connection . connection_list
    (48) connection_list -> connection .
    (47) connection_list -> . connection connection_list
    (48) connection_list -> . connection
    (49) connection -> . IDENTIFIER COLON type agent_ref ARROW agent_ref

    DEDENT          reduce using rule 48 (connection_list -> connection .)
    IDENTIFIER      shift and go to state 130

    connection                     shift and go to state 129
    connection_list                shift and go to state 170

state 130

    (49) connection -> IDENTIFIER . COLON type agent_ref ARROW agent_ref

    COLON           shift and go to state 171


state 131

    (53) func_def -> DEF IDENTIFIER LPAREN param_list . RPAREN COLON type COLON INDENT stmt_block DEDENT
    (54) func_def -> DEF IDENTIFIER LPAREN param_list . RPAREN COLON INDENT stmt_block DEDENT

    RPAREN          shift and go to state 172


state 132

    (55) param_list -> param_decl . param_list_tail
    (57) param_list_tail -> . COMMA param_decl param_list_tail
    (58) param_list_tail -> . empty
    (128) empty -> .

    COMMA           shift and go to state 174
    RPAREN          reduce using rule 128 (empty -> .)

    param_list_tail                shift and go to state 173
    empty                          shift and go to state 175

state 133

    (56) param_list -> empty .

    RPAREN          reduce using rule 56 (param_list -> empty .)


state 134

    (59) param_decl -> var_decl .

    COMMA           reduce using rule 59 (param_decl -> var_decl .)
    RPAREN          reduce using rule 59 (param_decl -> var_decl .)


state 135

    (109) tuple_elements_tail -> COMMA expr . tuple_elements_tail
    (111) field_access -> expr . DOT IDENTIFIER
    (109) tuple_elements_tail -> . COMMA expr tuple_elements_tail
    (110) tuple_elements_tail -> . empty
    (128) empty -> .

    DOT             shift and go to state 54
    COMMA           shift and go to state 98
    RPAREN          reduce using rule 128 (empty -> .)

    tuple_elements_tail            shift and go to state 176
    empty                          shift and go to state 99

state 136

    (76) for_stmt -> FOR IDENTIFIER IN expr . COLON stmt_block
    (111) field_access -> expr . DOT IDENTIFIER

    COLON           shift and go to state 177
    DOT             shift and go to state 54


state 137

    (79) if_stmt -> IF expr COLON stmt_block . ELSE COLON stmt_block
    (80) if_stmt -> IF expr COLON stmt_block .

    ELSE            shift and go to state 178
    AGENT           reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    CONNECT         reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    DEF             reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    FOR             reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    IF              reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    WHILE           reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    IDENTIFIER      reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    BREAK           reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    CONTINUE        reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    RETURN          reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    STRING          reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    NUMBER          reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    LPAREN          reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    LBRACE          reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    $end            reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    INPUT           reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    OUTPUT          reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    MEMORY          reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    MODEL           reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    CHAT            reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)
    DEDENT          reduce using rule 80 (if_stmt -> IF expr COLON stmt_block .)


state 138

    (60) stmt_block -> INDENT . statement_list DEDENT
    (61) statement_list -> . statement statement_list
    (62) statement_list -> . statement
    (63) statement -> . for_stmt
    (64) statement -> . if_stmt
    (65) statement -> . while_stmt
    (66) statement -> . assign_stmt
    (67) statement -> . expr_stmt
    (68) statement -> . break_stmt
    (69) statement -> . continue_stmt
    (70) statement -> . return_stmt
    (76) for_stmt -> . FOR IDENTIFIER IN expr COLON stmt_block
    (79) if_stmt -> . IF expr COLON stmt_block ELSE COLON stmt_block
    (80) if_stmt -> . IF expr COLON stmt_block
    (81) while_stmt -> . WHILE expr COLON stmt_block
    (71) assign_stmt -> . IDENTIFIER COLON type EQUALS expr
    (72) assign_stmt -> . IDENTIFIER EQUALS expr
    (73) expr_stmt -> . expr
    (77) break_stmt -> . BREAK
    (78) continue_stmt -> . CONTINUE
    (74) return_stmt -> . RETURN expr
    (75) return_stmt -> . RETURN
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    FOR             shift and go to state 23
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    IDENTIFIER      shift and go to state 19
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    statement_list                 shift and go to state 179
    statement                      shift and go to state 180
    for_stmt                       shift and go to state 10
    if_stmt                        shift and go to state 11
    while_stmt                     shift and go to state 12
    assign_stmt                    shift and go to state 13
    expr_stmt                      shift and go to state 14
    break_stmt                     shift and go to state 15
    continue_stmt                  shift and go to state 16
    return_stmt                    shift and go to state 17
    expr                           shift and go to state 24
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 139

    (81) while_stmt -> WHILE expr COLON stmt_block .

    AGENT           reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    CONNECT         reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    DEF             reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    FOR             reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    IF              reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    WHILE           reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    IDENTIFIER      reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    BREAK           reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    CONTINUE        reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    RETURN          reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    STRING          reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    NUMBER          reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    LPAREN          reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    LBRACE          reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    $end            reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    INPUT           reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    OUTPUT          reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    MEMORY          reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    MODEL           reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    CHAT            reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)
    DEDENT          reduce using rule 81 (while_stmt -> WHILE expr COLON stmt_block .)


state 140

    (98) list_elements_tail -> COMMA expr . list_elements_tail
    (111) field_access -> expr . DOT IDENTIFIER
    (98) list_elements_tail -> . COMMA expr list_elements_tail
    (99) list_elements_tail -> . empty
    (128) empty -> .

    DOT             shift and go to state 54
    COMMA           shift and go to state 110
    RBRACE          reduce using rule 128 (empty -> .)

    list_elements_tail             shift and go to state 181
    empty                          shift and go to state 111

state 141

    (103) record_elements_tail -> COMMA field_assign . record_elements_tail
    (103) record_elements_tail -> . COMMA field_assign record_elements_tail
    (104) record_elements_tail -> . empty
    (128) empty -> .

    COMMA           shift and go to state 113
    RBRACE          reduce using rule 128 (empty -> .)

    record_elements_tail           shift and go to state 182
    empty                          shift and go to state 114

state 142

    (105) field_assign -> IDENTIFIER . EQUALS expr

    EQUALS          shift and go to state 115


state 143

    (105) field_assign -> IDENTIFIER EQUALS expr .
    (111) field_access -> expr . DOT IDENTIFIER

    COMMA           reduce using rule 105 (field_assign -> IDENTIFIER EQUALS expr .)
    RBRACE          reduce using rule 105 (field_assign -> IDENTIFIER EQUALS expr .)
    DOT             shift and go to state 54


state 144

    (9) global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .

    AGENT           reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    CONNECT         reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    DEF             reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    FOR             reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    IF              reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    WHILE           reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    IDENTIFIER      reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    BREAK           reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    CONTINUE        reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    RETURN          reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    STRING          reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    NUMBER          reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    LPAREN          reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)
    LBRACE          reduce using rule 9 (global_block -> GLOBAL COLON INDENT var_decl_list DEDENT .)


state 145

    (10) var_decl_list -> var_decl var_decl_list .

    DEDENT          reduce using rule 10 (var_decl_list -> var_decl var_decl_list .)


state 146

    (12) var_decl -> IDENTIFIER COLON . type EQUALS expr
    (13) var_decl -> IDENTIFIER COLON . type
    (16) type -> . base_type
    (17) type -> . list_type
    (18) type -> . record_type
    (19) type -> . tuple_type
    (20) base_type -> . TYPE_STR
    (21) base_type -> . TYPE_INT
    (22) base_type -> . TYPE_FLOAT
    (23) base_type -> . TYPE_BOOL
    (24) list_type -> . TYPE_LIST LBRACE type RBRACE
    (25) record_type -> . TYPE_RECORD LBRACE field_decl_list RBRACE
    (29) tuple_type -> . TYPE_TUPLE LPAREN type_list_in_tuple RPAREN

    TYPE_STR        shift and go to state 83
    TYPE_INT        shift and go to state 84
    TYPE_FLOAT      shift and go to state 85
    TYPE_BOOL       shift and go to state 86
    TYPE_LIST       shift and go to state 87
    TYPE_RECORD     shift and go to state 88
    TYPE_TUPLE      shift and go to state 89

    type                           shift and go to state 183
    base_type                      shift and go to state 79
    list_type                      shift and go to state 80
    record_type                    shift and go to state 81
    tuple_type                     shift and go to state 82

state 147

    (14) var_decl -> IDENTIFIER EQUALS . expr
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 184
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 148

    (32) agent_def -> AGENT IDENTIFIER COLON INDENT agent_body . DEDENT

    DEDENT          shift and go to state 185


state 149

    (33) agent_body -> agent_body_item . agent_body
    (34) agent_body -> agent_body_item .
    (33) agent_body -> . agent_body_item agent_body
    (34) agent_body -> . agent_body_item
    (35) agent_body_item -> . input_block
    (36) agent_body_item -> . output_block
    (37) agent_body_item -> . memory_block
    (38) agent_body_item -> . model_block
    (39) agent_body_item -> . statement
    (40) agent_body_item -> . chat_block
    (41) input_block -> . INPUT COLON INDENT var_decl_list DEDENT
    (42) output_block -> . OUTPUT COLON INDENT var_decl_list DEDENT
    (43) memory_block -> . MEMORY COLON INDENT var_decl_list DEDENT
    (44) model_block -> . MODEL COLON STRING
    (63) statement -> . for_stmt
    (64) statement -> . if_stmt
    (65) statement -> . while_stmt
    (66) statement -> . assign_stmt
    (67) statement -> . expr_stmt
    (68) statement -> . break_stmt
    (69) statement -> . continue_stmt
    (70) statement -> . return_stmt
    (45) chat_block -> . CHAT IDENTIFIER COLON TRIPLE_STRING
    (76) for_stmt -> . FOR IDENTIFIER IN expr COLON stmt_block
    (79) if_stmt -> . IF expr COLON stmt_block ELSE COLON stmt_block
    (80) if_stmt -> . IF expr COLON stmt_block
    (81) while_stmt -> . WHILE expr COLON stmt_block
    (71) assign_stmt -> . IDENTIFIER COLON type EQUALS expr
    (72) assign_stmt -> . IDENTIFIER EQUALS expr
    (73) expr_stmt -> . expr
    (77) break_stmt -> . BREAK
    (78) continue_stmt -> . CONTINUE
    (74) return_stmt -> . RETURN expr
    (75) return_stmt -> . RETURN
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    DEDENT          reduce using rule 34 (agent_body -> agent_body_item .)
    INPUT           shift and go to state 156
    OUTPUT          shift and go to state 157
    MEMORY          shift and go to state 158
    MODEL           shift and go to state 159
    CHAT            shift and go to state 160
    FOR             shift and go to state 23
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    IDENTIFIER      shift and go to state 19
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    agent_body_item                shift and go to state 149
    agent_body                     shift and go to state 186
    input_block                    shift and go to state 150
    output_block                   shift and go to state 151
    memory_block                   shift and go to state 152
    model_block                    shift and go to state 153
    statement                      shift and go to state 154
    chat_block                     shift and go to state 155
    for_stmt                       shift and go to state 10
    if_stmt                        shift and go to state 11
    while_stmt                     shift and go to state 12
    assign_stmt                    shift and go to state 13
    expr_stmt                      shift and go to state 14
    break_stmt                     shift and go to state 15
    continue_stmt                  shift and go to state 16
    return_stmt                    shift and go to state 17
    expr                           shift and go to state 24
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 150

    (35) agent_body_item -> input_block .

    INPUT           reduce using rule 35 (agent_body_item -> input_block .)
    OUTPUT          reduce using rule 35 (agent_body_item -> input_block .)
    MEMORY          reduce using rule 35 (agent_body_item -> input_block .)
    MODEL           reduce using rule 35 (agent_body_item -> input_block .)
    CHAT            reduce using rule 35 (agent_body_item -> input_block .)
    FOR             reduce using rule 35 (agent_body_item -> input_block .)
    IF              reduce using rule 35 (agent_body_item -> input_block .)
    WHILE           reduce using rule 35 (agent_body_item -> input_block .)
    IDENTIFIER      reduce using rule 35 (agent_body_item -> input_block .)
    BREAK           reduce using rule 35 (agent_body_item -> input_block .)
    CONTINUE        reduce using rule 35 (agent_body_item -> input_block .)
    RETURN          reduce using rule 35 (agent_body_item -> input_block .)
    STRING          reduce using rule 35 (agent_body_item -> input_block .)
    NUMBER          reduce using rule 35 (agent_body_item -> input_block .)
    LPAREN          reduce using rule 35 (agent_body_item -> input_block .)
    LBRACE          reduce using rule 35 (agent_body_item -> input_block .)
    DEDENT          reduce using rule 35 (agent_body_item -> input_block .)


state 151

    (36) agent_body_item -> output_block .

    INPUT           reduce using rule 36 (agent_body_item -> output_block .)
    OUTPUT          reduce using rule 36 (agent_body_item -> output_block .)
    MEMORY          reduce using rule 36 (agent_body_item -> output_block .)
    MODEL           reduce using rule 36 (agent_body_item -> output_block .)
    CHAT            reduce using rule 36 (agent_body_item -> output_block .)
    FOR             reduce using rule 36 (agent_body_item -> output_block .)
    IF              reduce using rule 36 (agent_body_item -> output_block .)
    WHILE           reduce using rule 36 (agent_body_item -> output_block .)
    IDENTIFIER      reduce using rule 36 (agent_body_item -> output_block .)
    BREAK           reduce using rule 36 (agent_body_item -> output_block .)
    CONTINUE        reduce using rule 36 (agent_body_item -> output_block .)
    RETURN          reduce using rule 36 (agent_body_item -> output_block .)
    STRING          reduce using rule 36 (agent_body_item -> output_block .)
    NUMBER          reduce using rule 36 (agent_body_item -> output_block .)
    LPAREN          reduce using rule 36 (agent_body_item -> output_block .)
    LBRACE          reduce using rule 36 (agent_body_item -> output_block .)
    DEDENT          reduce using rule 36 (agent_body_item -> output_block .)


state 152

    (37) agent_body_item -> memory_block .

    INPUT           reduce using rule 37 (agent_body_item -> memory_block .)
    OUTPUT          reduce using rule 37 (agent_body_item -> memory_block .)
    MEMORY          reduce using rule 37 (agent_body_item -> memory_block .)
    MODEL           reduce using rule 37 (agent_body_item -> memory_block .)
    CHAT            reduce using rule 37 (agent_body_item -> memory_block .)
    FOR             reduce using rule 37 (agent_body_item -> memory_block .)
    IF              reduce using rule 37 (agent_body_item -> memory_block .)
    WHILE           reduce using rule 37 (agent_body_item -> memory_block .)
    IDENTIFIER      reduce using rule 37 (agent_body_item -> memory_block .)
    BREAK           reduce using rule 37 (agent_body_item -> memory_block .)
    CONTINUE        reduce using rule 37 (agent_body_item -> memory_block .)
    RETURN          reduce using rule 37 (agent_body_item -> memory_block .)
    STRING          reduce using rule 37 (agent_body_item -> memory_block .)
    NUMBER          reduce using rule 37 (agent_body_item -> memory_block .)
    LPAREN          reduce using rule 37 (agent_body_item -> memory_block .)
    LBRACE          reduce using rule 37 (agent_body_item -> memory_block .)
    DEDENT          reduce using rule 37 (agent_body_item -> memory_block .)


state 153

    (38) agent_body_item -> model_block .

    INPUT           reduce using rule 38 (agent_body_item -> model_block .)
    OUTPUT          reduce using rule 38 (agent_body_item -> model_block .)
    MEMORY          reduce using rule 38 (agent_body_item -> model_block .)
    MODEL           reduce using rule 38 (agent_body_item -> model_block .)
    CHAT            reduce using rule 38 (agent_body_item -> model_block .)
    FOR             reduce using rule 38 (agent_body_item -> model_block .)
    IF              reduce using rule 38 (agent_body_item -> model_block .)
    WHILE           reduce using rule 38 (agent_body_item -> model_block .)
    IDENTIFIER      reduce using rule 38 (agent_body_item -> model_block .)
    BREAK           reduce using rule 38 (agent_body_item -> model_block .)
    CONTINUE        reduce using rule 38 (agent_body_item -> model_block .)
    RETURN          reduce using rule 38 (agent_body_item -> model_block .)
    STRING          reduce using rule 38 (agent_body_item -> model_block .)
    NUMBER          reduce using rule 38 (agent_body_item -> model_block .)
    LPAREN          reduce using rule 38 (agent_body_item -> model_block .)
    LBRACE          reduce using rule 38 (agent_body_item -> model_block .)
    DEDENT          reduce using rule 38 (agent_body_item -> model_block .)


state 154

    (39) agent_body_item -> statement .

    INPUT           reduce using rule 39 (agent_body_item -> statement .)
    OUTPUT          reduce using rule 39 (agent_body_item -> statement .)
    MEMORY          reduce using rule 39 (agent_body_item -> statement .)
    MODEL           reduce using rule 39 (agent_body_item -> statement .)
    CHAT            reduce using rule 39 (agent_body_item -> statement .)
    FOR             reduce using rule 39 (agent_body_item -> statement .)
    IF              reduce using rule 39 (agent_body_item -> statement .)
    WHILE           reduce using rule 39 (agent_body_item -> statement .)
    IDENTIFIER      reduce using rule 39 (agent_body_item -> statement .)
    BREAK           reduce using rule 39 (agent_body_item -> statement .)
    CONTINUE        reduce using rule 39 (agent_body_item -> statement .)
    RETURN          reduce using rule 39 (agent_body_item -> statement .)
    STRING          reduce using rule 39 (agent_body_item -> statement .)
    NUMBER          reduce using rule 39 (agent_body_item -> statement .)
    LPAREN          reduce using rule 39 (agent_body_item -> statement .)
    LBRACE          reduce using rule 39 (agent_body_item -> statement .)
    DEDENT          reduce using rule 39 (agent_body_item -> statement .)


state 155

    (40) agent_body_item -> chat_block .

    INPUT           reduce using rule 40 (agent_body_item -> chat_block .)
    OUTPUT          reduce using rule 40 (agent_body_item -> chat_block .)
    MEMORY          reduce using rule 40 (agent_body_item -> chat_block .)
    MODEL           reduce using rule 40 (agent_body_item -> chat_block .)
    CHAT            reduce using rule 40 (agent_body_item -> chat_block .)
    FOR             reduce using rule 40 (agent_body_item -> chat_block .)
    IF              reduce using rule 40 (agent_body_item -> chat_block .)
    WHILE           reduce using rule 40 (agent_body_item -> chat_block .)
    IDENTIFIER      reduce using rule 40 (agent_body_item -> chat_block .)
    BREAK           reduce using rule 40 (agent_body_item -> chat_block .)
    CONTINUE        reduce using rule 40 (agent_body_item -> chat_block .)
    RETURN          reduce using rule 40 (agent_body_item -> chat_block .)
    STRING          reduce using rule 40 (agent_body_item -> chat_block .)
    NUMBER          reduce using rule 40 (agent_body_item -> chat_block .)
    LPAREN          reduce using rule 40 (agent_body_item -> chat_block .)
    LBRACE          reduce using rule 40 (agent_body_item -> chat_block .)
    DEDENT          reduce using rule 40 (agent_body_item -> chat_block .)


state 156

    (41) input_block -> INPUT . COLON INDENT var_decl_list DEDENT

    COLON           shift and go to state 187


state 157

    (42) output_block -> OUTPUT . COLON INDENT var_decl_list DEDENT

    COLON           shift and go to state 188


state 158

    (43) memory_block -> MEMORY . COLON INDENT var_decl_list DEDENT

    COLON           shift and go to state 189


state 159

    (44) model_block -> MODEL . COLON STRING

    COLON           shift and go to state 190


state 160

    (45) chat_block -> CHAT . IDENTIFIER COLON TRIPLE_STRING

    IDENTIFIER      shift and go to state 191


state 161

    (71) assign_stmt -> IDENTIFIER COLON type EQUALS expr .
    (111) field_access -> expr . DOT IDENTIFIER

    AGENT           reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    CONNECT         reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    DEF             reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    FOR             reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    IF              reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    WHILE           reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    IDENTIFIER      reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    BREAK           reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    CONTINUE        reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    RETURN          reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    STRING          reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    NUMBER          reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    LPAREN          reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    LBRACE          reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    $end            reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    INPUT           reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    OUTPUT          reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    MEMORY          reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    MODEL           reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    CHAT            reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    DEDENT          reduce using rule 71 (assign_stmt -> IDENTIFIER COLON type EQUALS expr .)
    DOT             shift and go to state 54


state 162

    (24) list_type -> TYPE_LIST LBRACE type . RBRACE

    RBRACE          shift and go to state 192


state 163

    (25) record_type -> TYPE_RECORD LBRACE field_decl_list . RBRACE

    RBRACE          shift and go to state 193


state 164

    (26) field_decl_list -> field_decl . field_decl_list
    (27) field_decl_list -> field_decl .
    (26) field_decl_list -> . field_decl field_decl_list
    (27) field_decl_list -> . field_decl
    (28) field_decl -> . IDENTIFIER COLON type

    RBRACE          reduce using rule 27 (field_decl_list -> field_decl .)
    IDENTIFIER      shift and go to state 165

    field_decl                     shift and go to state 164
    field_decl_list                shift and go to state 194

state 165

    (28) field_decl -> IDENTIFIER . COLON type

    COLON           shift and go to state 195


state 166

    (29) tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple . RPAREN
    (30) type_list_in_tuple -> type_list_in_tuple . COMMA type

    RPAREN          shift and go to state 196
    COMMA           shift and go to state 197


state 167

    (31) type_list_in_tuple -> type .

    RPAREN          reduce using rule 31 (type_list_in_tuple -> type .)
    COMMA           reduce using rule 31 (type_list_in_tuple -> type .)


state 168

    (115) arg_list_tail -> COMMA expr . arg_list_tail
    (111) field_access -> expr . DOT IDENTIFIER
    (115) arg_list_tail -> . COMMA expr arg_list_tail
    (116) arg_list_tail -> . empty
    (128) empty -> .

    DOT             shift and go to state 54
    COMMA           shift and go to state 126
    RPAREN          reduce using rule 128 (empty -> .)

    arg_list_tail                  shift and go to state 198
    empty                          shift and go to state 127

state 169

    (46) connect_block -> CONNECT COLON INDENT connection_list DEDENT .

    AGENT           reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    CONNECT         reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    DEF             reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    FOR             reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    IF              reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    WHILE           reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    IDENTIFIER      reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    BREAK           reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    CONTINUE        reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    RETURN          reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    STRING          reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    NUMBER          reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    LPAREN          reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    LBRACE          reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)
    $end            reduce using rule 46 (connect_block -> CONNECT COLON INDENT connection_list DEDENT .)


state 170

    (47) connection_list -> connection connection_list .

    DEDENT          reduce using rule 47 (connection_list -> connection connection_list .)


state 171

    (49) connection -> IDENTIFIER COLON . type agent_ref ARROW agent_ref
    (16) type -> . base_type
    (17) type -> . list_type
    (18) type -> . record_type
    (19) type -> . tuple_type
    (20) base_type -> . TYPE_STR
    (21) base_type -> . TYPE_INT
    (22) base_type -> . TYPE_FLOAT
    (23) base_type -> . TYPE_BOOL
    (24) list_type -> . TYPE_LIST LBRACE type RBRACE
    (25) record_type -> . TYPE_RECORD LBRACE field_decl_list RBRACE
    (29) tuple_type -> . TYPE_TUPLE LPAREN type_list_in_tuple RPAREN

    TYPE_STR        shift and go to state 83
    TYPE_INT        shift and go to state 84
    TYPE_FLOAT      shift and go to state 85
    TYPE_BOOL       shift and go to state 86
    TYPE_LIST       shift and go to state 87
    TYPE_RECORD     shift and go to state 88
    TYPE_TUPLE      shift and go to state 89

    type                           shift and go to state 199
    base_type                      shift and go to state 79
    list_type                      shift and go to state 80
    record_type                    shift and go to state 81
    tuple_type                     shift and go to state 82

state 172

    (53) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN . COLON type COLON INDENT stmt_block DEDENT
    (54) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN . COLON INDENT stmt_block DEDENT

    COLON           shift and go to state 200


state 173

    (55) param_list -> param_decl param_list_tail .

    RPAREN          reduce using rule 55 (param_list -> param_decl param_list_tail .)


state 174

    (57) param_list_tail -> COMMA . param_decl param_list_tail
    (59) param_decl -> . var_decl
    (12) var_decl -> . IDENTIFIER COLON type EQUALS expr
    (13) var_decl -> . IDENTIFIER COLON type
    (14) var_decl -> . IDENTIFIER EQUALS expr
    (15) var_decl -> . IDENTIFIER

    IDENTIFIER      shift and go to state 118

    param_decl                     shift and go to state 201
    var_decl                       shift and go to state 134

state 175

    (58) param_list_tail -> empty .

    RPAREN          reduce using rule 58 (param_list_tail -> empty .)


state 176

    (109) tuple_elements_tail -> COMMA expr tuple_elements_tail .

    RPAREN          reduce using rule 109 (tuple_elements_tail -> COMMA expr tuple_elements_tail .)


state 177

    (76) for_stmt -> FOR IDENTIFIER IN expr COLON . stmt_block
    (60) stmt_block -> . INDENT statement_list DEDENT

    INDENT          shift and go to state 138

    stmt_block                     shift and go to state 202

state 178

    (79) if_stmt -> IF expr COLON stmt_block ELSE . COLON stmt_block

    COLON           shift and go to state 203


state 179

    (60) stmt_block -> INDENT statement_list . DEDENT

    DEDENT          shift and go to state 204


state 180

    (61) statement_list -> statement . statement_list
    (62) statement_list -> statement .
    (61) statement_list -> . statement statement_list
    (62) statement_list -> . statement
    (63) statement -> . for_stmt
    (64) statement -> . if_stmt
    (65) statement -> . while_stmt
    (66) statement -> . assign_stmt
    (67) statement -> . expr_stmt
    (68) statement -> . break_stmt
    (69) statement -> . continue_stmt
    (70) statement -> . return_stmt
    (76) for_stmt -> . FOR IDENTIFIER IN expr COLON stmt_block
    (79) if_stmt -> . IF expr COLON stmt_block ELSE COLON stmt_block
    (80) if_stmt -> . IF expr COLON stmt_block
    (81) while_stmt -> . WHILE expr COLON stmt_block
    (71) assign_stmt -> . IDENTIFIER COLON type EQUALS expr
    (72) assign_stmt -> . IDENTIFIER EQUALS expr
    (73) expr_stmt -> . expr
    (77) break_stmt -> . BREAK
    (78) continue_stmt -> . CONTINUE
    (74) return_stmt -> . RETURN expr
    (75) return_stmt -> . RETURN
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    DEDENT          reduce using rule 62 (statement_list -> statement .)
    FOR             shift and go to state 23
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    IDENTIFIER      shift and go to state 19
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    statement                      shift and go to state 180
    statement_list                 shift and go to state 205
    for_stmt                       shift and go to state 10
    if_stmt                        shift and go to state 11
    while_stmt                     shift and go to state 12
    assign_stmt                    shift and go to state 13
    expr_stmt                      shift and go to state 14
    break_stmt                     shift and go to state 15
    continue_stmt                  shift and go to state 16
    return_stmt                    shift and go to state 17
    expr                           shift and go to state 24
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 181

    (98) list_elements_tail -> COMMA expr list_elements_tail .

    RBRACE          reduce using rule 98 (list_elements_tail -> COMMA expr list_elements_tail .)


state 182

    (103) record_elements_tail -> COMMA field_assign record_elements_tail .

    RBRACE          reduce using rule 103 (record_elements_tail -> COMMA field_assign record_elements_tail .)


state 183

    (12) var_decl -> IDENTIFIER COLON type . EQUALS expr
    (13) var_decl -> IDENTIFIER COLON type .

    EQUALS          shift and go to state 206
    IDENTIFIER      reduce using rule 13 (var_decl -> IDENTIFIER COLON type .)
    DEDENT          reduce using rule 13 (var_decl -> IDENTIFIER COLON type .)
    COMMA           reduce using rule 13 (var_decl -> IDENTIFIER COLON type .)
    RPAREN          reduce using rule 13 (var_decl -> IDENTIFIER COLON type .)


state 184

    (14) var_decl -> IDENTIFIER EQUALS expr .
    (111) field_access -> expr . DOT IDENTIFIER

    IDENTIFIER      reduce using rule 14 (var_decl -> IDENTIFIER EQUALS expr .)
    DEDENT          reduce using rule 14 (var_decl -> IDENTIFIER EQUALS expr .)
    COMMA           reduce using rule 14 (var_decl -> IDENTIFIER EQUALS expr .)
    RPAREN          reduce using rule 14 (var_decl -> IDENTIFIER EQUALS expr .)
    DOT             shift and go to state 54


state 185

    (32) agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .

    AGENT           reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    CONNECT         reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    DEF             reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    FOR             reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    IF              reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    WHILE           reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    IDENTIFIER      reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    BREAK           reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    CONTINUE        reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    RETURN          reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    STRING          reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    NUMBER          reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    LPAREN          reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    LBRACE          reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)
    $end            reduce using rule 32 (agent_def -> AGENT IDENTIFIER COLON INDENT agent_body DEDENT .)


state 186

    (33) agent_body -> agent_body_item agent_body .

    DEDENT          reduce using rule 33 (agent_body -> agent_body_item agent_body .)


state 187

    (41) input_block -> INPUT COLON . INDENT var_decl_list DEDENT

    INDENT          shift and go to state 207


state 188

    (42) output_block -> OUTPUT COLON . INDENT var_decl_list DEDENT

    INDENT          shift and go to state 208


state 189

    (43) memory_block -> MEMORY COLON . INDENT var_decl_list DEDENT

    INDENT          shift and go to state 209


state 190

    (44) model_block -> MODEL COLON . STRING

    STRING          shift and go to state 210


state 191

    (45) chat_block -> CHAT IDENTIFIER . COLON TRIPLE_STRING

    COLON           shift and go to state 211


state 192

    (24) list_type -> TYPE_LIST LBRACE type RBRACE .

    EQUALS          reduce using rule 24 (list_type -> TYPE_LIST LBRACE type RBRACE .)
    RBRACE          reduce using rule 24 (list_type -> TYPE_LIST LBRACE type RBRACE .)
    RPAREN          reduce using rule 24 (list_type -> TYPE_LIST LBRACE type RBRACE .)
    COMMA           reduce using rule 24 (list_type -> TYPE_LIST LBRACE type RBRACE .)
    IDENTIFIER      reduce using rule 24 (list_type -> TYPE_LIST LBRACE type RBRACE .)
    DEDENT          reduce using rule 24 (list_type -> TYPE_LIST LBRACE type RBRACE .)
    COLON           reduce using rule 24 (list_type -> TYPE_LIST LBRACE type RBRACE .)


state 193

    (25) record_type -> TYPE_RECORD LBRACE field_decl_list RBRACE .

    EQUALS          reduce using rule 25 (record_type -> TYPE_RECORD LBRACE field_decl_list RBRACE .)
    RBRACE          reduce using rule 25 (record_type -> TYPE_RECORD LBRACE field_decl_list RBRACE .)
    RPAREN          reduce using rule 25 (record_type -> TYPE_RECORD LBRACE field_decl_list RBRACE .)
    COMMA           reduce using rule 25 (record_type -> TYPE_RECORD LBRACE field_decl_list RBRACE .)
    IDENTIFIER      reduce using rule 25 (record_type -> TYPE_RECORD LBRACE field_decl_list RBRACE .)
    DEDENT          reduce using rule 25 (record_type -> TYPE_RECORD LBRACE field_decl_list RBRACE .)
    COLON           reduce using rule 25 (record_type -> TYPE_RECORD LBRACE field_decl_list RBRACE .)


state 194

    (26) field_decl_list -> field_decl field_decl_list .

    RBRACE          reduce using rule 26 (field_decl_list -> field_decl field_decl_list .)


state 195

    (28) field_decl -> IDENTIFIER COLON . type
    (16) type -> . base_type
    (17) type -> . list_type
    (18) type -> . record_type
    (19) type -> . tuple_type
    (20) base_type -> . TYPE_STR
    (21) base_type -> . TYPE_INT
    (22) base_type -> . TYPE_FLOAT
    (23) base_type -> . TYPE_BOOL
    (24) list_type -> . TYPE_LIST LBRACE type RBRACE
    (25) record_type -> . TYPE_RECORD LBRACE field_decl_list RBRACE
    (29) tuple_type -> . TYPE_TUPLE LPAREN type_list_in_tuple RPAREN

    TYPE_STR        shift and go to state 83
    TYPE_INT        shift and go to state 84
    TYPE_FLOAT      shift and go to state 85
    TYPE_BOOL       shift and go to state 86
    TYPE_LIST       shift and go to state 87
    TYPE_RECORD     shift and go to state 88
    TYPE_TUPLE      shift and go to state 89

    type                           shift and go to state 212
    base_type                      shift and go to state 79
    list_type                      shift and go to state 80
    record_type                    shift and go to state 81
    tuple_type                     shift and go to state 82

state 196

    (29) tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple RPAREN .

    EQUALS          reduce using rule 29 (tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple RPAREN .)
    RBRACE          reduce using rule 29 (tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple RPAREN .)
    RPAREN          reduce using rule 29 (tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple RPAREN .)
    COMMA           reduce using rule 29 (tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple RPAREN .)
    IDENTIFIER      reduce using rule 29 (tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple RPAREN .)
    DEDENT          reduce using rule 29 (tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple RPAREN .)
    COLON           reduce using rule 29 (tuple_type -> TYPE_TUPLE LPAREN type_list_in_tuple RPAREN .)


state 197

    (30) type_list_in_tuple -> type_list_in_tuple COMMA . type
    (16) type -> . base_type
    (17) type -> . list_type
    (18) type -> . record_type
    (19) type -> . tuple_type
    (20) base_type -> . TYPE_STR
    (21) base_type -> . TYPE_INT
    (22) base_type -> . TYPE_FLOAT
    (23) base_type -> . TYPE_BOOL
    (24) list_type -> . TYPE_LIST LBRACE type RBRACE
    (25) record_type -> . TYPE_RECORD LBRACE field_decl_list RBRACE
    (29) tuple_type -> . TYPE_TUPLE LPAREN type_list_in_tuple RPAREN

    TYPE_STR        shift and go to state 83
    TYPE_INT        shift and go to state 84
    TYPE_FLOAT      shift and go to state 85
    TYPE_BOOL       shift and go to state 86
    TYPE_LIST       shift and go to state 87
    TYPE_RECORD     shift and go to state 88
    TYPE_TUPLE      shift and go to state 89

    type                           shift and go to state 213
    base_type                      shift and go to state 79
    list_type                      shift and go to state 80
    record_type                    shift and go to state 81
    tuple_type                     shift and go to state 82

state 198

    (115) arg_list_tail -> COMMA expr arg_list_tail .

    RPAREN          reduce using rule 115 (arg_list_tail -> COMMA expr arg_list_tail .)


state 199

    (49) connection -> IDENTIFIER COLON type . agent_ref ARROW agent_ref
    (50) agent_ref -> . IDENTIFIER agent_ref_tail

    IDENTIFIER      shift and go to state 214

    agent_ref                      shift and go to state 215

state 200

    (53) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON . type COLON INDENT stmt_block DEDENT
    (54) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON . INDENT stmt_block DEDENT
    (16) type -> . base_type
    (17) type -> . list_type
    (18) type -> . record_type
    (19) type -> . tuple_type
    (20) base_type -> . TYPE_STR
    (21) base_type -> . TYPE_INT
    (22) base_type -> . TYPE_FLOAT
    (23) base_type -> . TYPE_BOOL
    (24) list_type -> . TYPE_LIST LBRACE type RBRACE
    (25) record_type -> . TYPE_RECORD LBRACE field_decl_list RBRACE
    (29) tuple_type -> . TYPE_TUPLE LPAREN type_list_in_tuple RPAREN

    INDENT          shift and go to state 217
    TYPE_STR        shift and go to state 83
    TYPE_INT        shift and go to state 84
    TYPE_FLOAT      shift and go to state 85
    TYPE_BOOL       shift and go to state 86
    TYPE_LIST       shift and go to state 87
    TYPE_RECORD     shift and go to state 88
    TYPE_TUPLE      shift and go to state 89

    type                           shift and go to state 216
    base_type                      shift and go to state 79
    list_type                      shift and go to state 80
    record_type                    shift and go to state 81
    tuple_type                     shift and go to state 82

state 201

    (57) param_list_tail -> COMMA param_decl . param_list_tail
    (57) param_list_tail -> . COMMA param_decl param_list_tail
    (58) param_list_tail -> . empty
    (128) empty -> .

    COMMA           shift and go to state 174
    RPAREN          reduce using rule 128 (empty -> .)

    param_list_tail                shift and go to state 218
    empty                          shift and go to state 175

state 202

    (76) for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .

    AGENT           reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    CONNECT         reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    DEF             reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    FOR             reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    IF              reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    WHILE           reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    IDENTIFIER      reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    BREAK           reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    CONTINUE        reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    RETURN          reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    STRING          reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    NUMBER          reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    LPAREN          reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    LBRACE          reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    $end            reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    INPUT           reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    OUTPUT          reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    MEMORY          reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    MODEL           reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    CHAT            reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)
    DEDENT          reduce using rule 76 (for_stmt -> FOR IDENTIFIER IN expr COLON stmt_block .)


state 203

    (79) if_stmt -> IF expr COLON stmt_block ELSE COLON . stmt_block
    (60) stmt_block -> . INDENT statement_list DEDENT

    INDENT          shift and go to state 138

    stmt_block                     shift and go to state 219

state 204

    (60) stmt_block -> INDENT statement_list DEDENT .

    ELSE            reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    AGENT           reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    CONNECT         reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    DEF             reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    FOR             reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    IF              reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    WHILE           reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    IDENTIFIER      reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    BREAK           reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    CONTINUE        reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    RETURN          reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    STRING          reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    NUMBER          reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    LPAREN          reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    LBRACE          reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    $end            reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    INPUT           reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    OUTPUT          reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    MEMORY          reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    MODEL           reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    CHAT            reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)
    DEDENT          reduce using rule 60 (stmt_block -> INDENT statement_list DEDENT .)


state 205

    (61) statement_list -> statement statement_list .

    DEDENT          reduce using rule 61 (statement_list -> statement statement_list .)


state 206

    (12) var_decl -> IDENTIFIER COLON type EQUALS . expr
    (82) expr -> . expr_head bin_op expr_tail
    (83) expr -> . expr_head
    (84) expr_head -> . atom
    (85) expr_head -> . list_expr
    (86) expr_head -> . record_expr
    (87) expr_head -> . tuple_expr
    (88) expr_head -> . field_access
    (89) expr_head -> . func_call
    (91) atom -> . IDENTIFIER
    (92) atom -> . STRING
    (93) atom -> . NUMBER
    (94) atom -> . LPAREN expr RPAREN
    (95) list_expr -> . LBRACE list_elements RBRACE
    (100) record_expr -> . LBRACE record_elements RBRACE
    (106) tuple_expr -> . LPAREN tuple_elements RPAREN
    (111) field_access -> . expr DOT IDENTIFIER
    (112) func_call -> . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 52
    STRING          shift and go to state 37
    NUMBER          shift and go to state 38
    LPAREN          shift and go to state 22
    LBRACE          shift and go to state 39

    expr                           shift and go to state 220
    expr_head                      shift and go to state 30
    atom                           shift and go to state 31
    list_expr                      shift and go to state 32
    record_expr                    shift and go to state 33
    tuple_expr                     shift and go to state 34
    field_access                   shift and go to state 35
    func_call                      shift and go to state 36

state 207

    (41) input_block -> INPUT COLON INDENT . var_decl_list DEDENT
    (10) var_decl_list -> . var_decl var_decl_list
    (11) var_decl_list -> . var_decl
    (12) var_decl -> . IDENTIFIER COLON type EQUALS expr
    (13) var_decl -> . IDENTIFIER COLON type
    (14) var_decl -> . IDENTIFIER EQUALS expr
    (15) var_decl -> . IDENTIFIER

    IDENTIFIER      shift and go to state 118

    var_decl_list                  shift and go to state 221
    var_decl                       shift and go to state 117

state 208

    (42) output_block -> OUTPUT COLON INDENT . var_decl_list DEDENT
    (10) var_decl_list -> . var_decl var_decl_list
    (11) var_decl_list -> . var_decl
    (12) var_decl -> . IDENTIFIER COLON type EQUALS expr
    (13) var_decl -> . IDENTIFIER COLON type
    (14) var_decl -> . IDENTIFIER EQUALS expr
    (15) var_decl -> . IDENTIFIER

    IDENTIFIER      shift and go to state 118

    var_decl_list                  shift and go to state 222
    var_decl                       shift and go to state 117

state 209

    (43) memory_block -> MEMORY COLON INDENT . var_decl_list DEDENT
    (10) var_decl_list -> . var_decl var_decl_list
    (11) var_decl_list -> . var_decl
    (12) var_decl -> . IDENTIFIER COLON type EQUALS expr
    (13) var_decl -> . IDENTIFIER COLON type
    (14) var_decl -> . IDENTIFIER EQUALS expr
    (15) var_decl -> . IDENTIFIER

    IDENTIFIER      shift and go to state 118

    var_decl_list                  shift and go to state 223
    var_decl                       shift and go to state 117

state 210

    (44) model_block -> MODEL COLON STRING .

    INPUT           reduce using rule 44 (model_block -> MODEL COLON STRING .)
    OUTPUT          reduce using rule 44 (model_block -> MODEL COLON STRING .)
    MEMORY          reduce using rule 44 (model_block -> MODEL COLON STRING .)
    MODEL           reduce using rule 44 (model_block -> MODEL COLON STRING .)
    CHAT            reduce using rule 44 (model_block -> MODEL COLON STRING .)
    FOR             reduce using rule 44 (model_block -> MODEL COLON STRING .)
    IF              reduce using rule 44 (model_block -> MODEL COLON STRING .)
    WHILE           reduce using rule 44 (model_block -> MODEL COLON STRING .)
    IDENTIFIER      reduce using rule 44 (model_block -> MODEL COLON STRING .)
    BREAK           reduce using rule 44 (model_block -> MODEL COLON STRING .)
    CONTINUE        reduce using rule 44 (model_block -> MODEL COLON STRING .)
    RETURN          reduce using rule 44 (model_block -> MODEL COLON STRING .)
    STRING          reduce using rule 44 (model_block -> MODEL COLON STRING .)
    NUMBER          reduce using rule 44 (model_block -> MODEL COLON STRING .)
    LPAREN          reduce using rule 44 (model_block -> MODEL COLON STRING .)
    LBRACE          reduce using rule 44 (model_block -> MODEL COLON STRING .)
    DEDENT          reduce using rule 44 (model_block -> MODEL COLON STRING .)


state 211

    (45) chat_block -> CHAT IDENTIFIER COLON . TRIPLE_STRING

    TRIPLE_STRING   shift and go to state 224


state 212

    (28) field_decl -> IDENTIFIER COLON type .

    IDENTIFIER      reduce using rule 28 (field_decl -> IDENTIFIER COLON type .)
    RBRACE          reduce using rule 28 (field_decl -> IDENTIFIER COLON type .)


state 213

    (30) type_list_in_tuple -> type_list_in_tuple COMMA type .

    RPAREN          reduce using rule 30 (type_list_in_tuple -> type_list_in_tuple COMMA type .)
    COMMA           reduce using rule 30 (type_list_in_tuple -> type_list_in_tuple COMMA type .)


state 214

    (50) agent_ref -> IDENTIFIER . agent_ref_tail
    (51) agent_ref_tail -> . DOT IDENTIFIER agent_ref_tail
    (52) agent_ref_tail -> . empty
    (128) empty -> .

    DOT             shift and go to state 226
    ARROW           reduce using rule 128 (empty -> .)
    IDENTIFIER      reduce using rule 128 (empty -> .)
    DEDENT          reduce using rule 128 (empty -> .)

    agent_ref_tail                 shift and go to state 225
    empty                          shift and go to state 227

state 215

    (49) connection -> IDENTIFIER COLON type agent_ref . ARROW agent_ref

    ARROW           shift and go to state 228


state 216

    (53) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type . COLON INDENT stmt_block DEDENT

    COLON           shift and go to state 229


state 217

    (54) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT . stmt_block DEDENT
    (60) stmt_block -> . INDENT statement_list DEDENT

    INDENT          shift and go to state 138

    stmt_block                     shift and go to state 230

state 218

    (57) param_list_tail -> COMMA param_decl param_list_tail .

    RPAREN          reduce using rule 57 (param_list_tail -> COMMA param_decl param_list_tail .)


state 219

    (79) if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .

    AGENT           reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    CONNECT         reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    DEF             reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    FOR             reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    IF              reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    WHILE           reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    IDENTIFIER      reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    BREAK           reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    CONTINUE        reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    RETURN          reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    STRING          reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    NUMBER          reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    LPAREN          reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    LBRACE          reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    $end            reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    INPUT           reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    OUTPUT          reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    MEMORY          reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    MODEL           reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    CHAT            reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)
    DEDENT          reduce using rule 79 (if_stmt -> IF expr COLON stmt_block ELSE COLON stmt_block .)


state 220

    (12) var_decl -> IDENTIFIER COLON type EQUALS expr .
    (111) field_access -> expr . DOT IDENTIFIER

    IDENTIFIER      reduce using rule 12 (var_decl -> IDENTIFIER COLON type EQUALS expr .)
    DEDENT          reduce using rule 12 (var_decl -> IDENTIFIER COLON type EQUALS expr .)
    COMMA           reduce using rule 12 (var_decl -> IDENTIFIER COLON type EQUALS expr .)
    RPAREN          reduce using rule 12 (var_decl -> IDENTIFIER COLON type EQUALS expr .)
    DOT             shift and go to state 54


state 221

    (41) input_block -> INPUT COLON INDENT var_decl_list . DEDENT

    DEDENT          shift and go to state 231


state 222

    (42) output_block -> OUTPUT COLON INDENT var_decl_list . DEDENT

    DEDENT          shift and go to state 232


state 223

    (43) memory_block -> MEMORY COLON INDENT var_decl_list . DEDENT

    DEDENT          shift and go to state 233


state 224

    (45) chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .

    INPUT           reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    OUTPUT          reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    MEMORY          reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    MODEL           reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    CHAT            reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    FOR             reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    IF              reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    WHILE           reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    IDENTIFIER      reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    BREAK           reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    CONTINUE        reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    RETURN          reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    STRING          reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    NUMBER          reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    LPAREN          reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    LBRACE          reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)
    DEDENT          reduce using rule 45 (chat_block -> CHAT IDENTIFIER COLON TRIPLE_STRING .)


state 225

    (50) agent_ref -> IDENTIFIER agent_ref_tail .

    ARROW           reduce using rule 50 (agent_ref -> IDENTIFIER agent_ref_tail .)
    IDENTIFIER      reduce using rule 50 (agent_ref -> IDENTIFIER agent_ref_tail .)
    DEDENT          reduce using rule 50 (agent_ref -> IDENTIFIER agent_ref_tail .)


state 226

    (51) agent_ref_tail -> DOT . IDENTIFIER agent_ref_tail

    IDENTIFIER      shift and go to state 234


state 227

    (52) agent_ref_tail -> empty .

    ARROW           reduce using rule 52 (agent_ref_tail -> empty .)
    IDENTIFIER      reduce using rule 52 (agent_ref_tail -> empty .)
    DEDENT          reduce using rule 52 (agent_ref_tail -> empty .)


state 228

    (49) connection -> IDENTIFIER COLON type agent_ref ARROW . agent_ref
    (50) agent_ref -> . IDENTIFIER agent_ref_tail

    IDENTIFIER      shift and go to state 214

    agent_ref                      shift and go to state 235

state 229

    (53) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON . INDENT stmt_block DEDENT

    INDENT          shift and go to state 236


state 230

    (54) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block . DEDENT

    DEDENT          shift and go to state 237


state 231

    (41) input_block -> INPUT COLON INDENT var_decl_list DEDENT .

    INPUT           reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    OUTPUT          reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    MEMORY          reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    MODEL           reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    CHAT            reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    FOR             reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    IF              reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    WHILE           reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    IDENTIFIER      reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    BREAK           reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    CONTINUE        reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    RETURN          reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    STRING          reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    NUMBER          reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    LPAREN          reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    LBRACE          reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)
    DEDENT          reduce using rule 41 (input_block -> INPUT COLON INDENT var_decl_list DEDENT .)


state 232

    (42) output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .

    INPUT           reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    OUTPUT          reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    MEMORY          reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    MODEL           reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    CHAT            reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    FOR             reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    IF              reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    WHILE           reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    IDENTIFIER      reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    BREAK           reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    CONTINUE        reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    RETURN          reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    STRING          reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    NUMBER          reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    LPAREN          reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    LBRACE          reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)
    DEDENT          reduce using rule 42 (output_block -> OUTPUT COLON INDENT var_decl_list DEDENT .)


state 233

    (43) memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .

    INPUT           reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    OUTPUT          reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    MEMORY          reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    MODEL           reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    CHAT            reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    FOR             reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    IF              reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    WHILE           reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    IDENTIFIER      reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    BREAK           reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    CONTINUE        reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    RETURN          reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    STRING          reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    NUMBER          reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    LPAREN          reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    LBRACE          reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)
    DEDENT          reduce using rule 43 (memory_block -> MEMORY COLON INDENT var_decl_list DEDENT .)


state 234

    (51) agent_ref_tail -> DOT IDENTIFIER . agent_ref_tail
    (51) agent_ref_tail -> . DOT IDENTIFIER agent_ref_tail
    (52) agent_ref_tail -> . empty
    (128) empty -> .

    DOT             shift and go to state 226
    ARROW           reduce using rule 128 (empty -> .)
    IDENTIFIER      reduce using rule 128 (empty -> .)
    DEDENT          reduce using rule 128 (empty -> .)

    agent_ref_tail                 shift and go to state 238
    empty                          shift and go to state 227

state 235

    (49) connection -> IDENTIFIER COLON type agent_ref ARROW agent_ref .

    IDENTIFIER      reduce using rule 49 (connection -> IDENTIFIER COLON type agent_ref ARROW agent_ref .)
    DEDENT          reduce using rule 49 (connection -> IDENTIFIER COLON type agent_ref ARROW agent_ref .)


state 236

    (53) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT . stmt_block DEDENT
    (60) stmt_block -> . INDENT statement_list DEDENT

    INDENT          shift and go to state 138

    stmt_block                     shift and go to state 239

state 237

    (54) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .

    AGENT           reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    CONNECT         reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    DEF             reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    FOR             reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    IF              reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    WHILE           reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    IDENTIFIER      reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    BREAK           reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    CONTINUE        reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    RETURN          reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    STRING          reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    NUMBER          reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    LPAREN          reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    LBRACE          reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)
    $end            reduce using rule 54 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON INDENT stmt_block DEDENT .)


state 238

    (51) agent_ref_tail -> DOT IDENTIFIER agent_ref_tail .

    ARROW           reduce using rule 51 (agent_ref_tail -> DOT IDENTIFIER agent_ref_tail .)
    IDENTIFIER      reduce using rule 51 (agent_ref_tail -> DOT IDENTIFIER agent_ref_tail .)
    DEDENT          reduce using rule 51 (agent_ref_tail -> DOT IDENTIFIER agent_ref_tail .)


state 239

    (53) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block . DEDENT

    DEDENT          shift and go to state 240


state 240

    (53) func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .

    AGENT           reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    CONNECT         reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    DEF             reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    FOR             reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    IF              reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    WHILE           reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    IDENTIFIER      reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    BREAK           reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    CONTINUE        reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    RETURN          reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    STRING          reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    NUMBER          reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    LPAREN          reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    LBRACE          reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)
    $end            reduce using rule 53 (func_def -> DEF IDENTIFIER LPAREN param_list RPAREN COLON type COLON INDENT stmt_block DEDENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 19 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 29 resolved as shift
WARNING: shift/reduce conflict for STRING in state 29 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 29 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 29 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 29 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 49 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 52 resolved as shift
WARNING: shift/reduce conflict for DOT in state 106 resolved as shift
WARNING: reduce/reduce conflict in state 73 resolved using rule (list_elements -> empty)
WARNING: rejected rule (record_elements -> empty) in state 73
WARNING: Rule (record_elements -> empty) is never reduced
